/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.servizidigitali.gestionecomunicazioni.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import it.servizidigitali.gestionecomunicazioni.model.Comunicazione;
import it.servizidigitali.gestionecomunicazioni.model.ComunicazioneModel;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the Comunicazione service. Represents a row in the &quot;comunicazione&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>ComunicazioneModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ComunicazioneImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ComunicazioneImpl
 * @generated
 */
public class ComunicazioneModelImpl
	extends BaseModelImpl<Comunicazione> implements ComunicazioneModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a comunicazione model instance should use the <code>Comunicazione</code> interface instead.
	 */
	public static final String TABLE_NAME = "comunicazione";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"comunicazioneId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"titolo", Types.VARCHAR}, {"descrizione", Types.VARCHAR},
		{"dataInvio", Types.TIMESTAMP}, {"dataInizio", Types.TIMESTAMP},
		{"dataFine", Types.TIMESTAMP}, {"codiceServizio", Types.VARCHAR},
		{"uriServizio", Types.VARCHAR},
		{"tipologiaComunicazioneId", Types.BIGINT},
		{"organizationId", Types.BIGINT}, {"destinatarioUserId", Types.BIGINT},
		{"destinatarioOrganizationId", Types.BIGINT},
		{"calendarBookingId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("comunicazioneId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("titolo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("descrizione", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("dataInvio", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dataInizio", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dataFine", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("codiceServizio", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("uriServizio", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("tipologiaComunicazioneId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("organizationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("destinatarioUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("destinatarioOrganizationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("calendarBookingId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table comunicazione (uuid_ VARCHAR(75) null,comunicazioneId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,titolo VARCHAR(75) null,descrizione VARCHAR(75) null,dataInvio DATE null,dataInizio DATE null,dataFine DATE null,codiceServizio VARCHAR(75) null,uriServizio VARCHAR(75) null,tipologiaComunicazioneId LONG,organizationId LONG,destinatarioUserId LONG,destinatarioOrganizationId LONG,calendarBookingId LONG)";

	public static final String TABLE_SQL_DROP = "drop table comunicazione";

	public static final String ORDER_BY_JPQL =
		" ORDER BY comunicazione.comunicazioneId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY comunicazione.comunicazioneId ASC";

	public static final String DATA_SOURCE = "servizidigitaliDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long DESTINATARIOORGANIZATIONID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long DESTINATARIOUSERID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ORGANIZATIONID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long TIPOLOGIACOMUNICAZIONEID_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 64L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMUNICAZIONEID_COLUMN_BITMASK = 128L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public ComunicazioneModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _comunicazioneId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setComunicazioneId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _comunicazioneId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Comunicazione.class;
	}

	@Override
	public String getModelClassName() {
		return Comunicazione.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<Comunicazione, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<Comunicazione, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Comunicazione, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((Comunicazione)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<Comunicazione, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<Comunicazione, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(Comunicazione)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<Comunicazione, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<Comunicazione, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, Comunicazione>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			Comunicazione.class.getClassLoader(), Comunicazione.class,
			ModelWrapper.class);

		try {
			Constructor<Comunicazione> constructor =
				(Constructor<Comunicazione>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<Comunicazione, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<Comunicazione, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<Comunicazione, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<Comunicazione, Object>>();
		Map<String, BiConsumer<Comunicazione, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<Comunicazione, ?>>();

		attributeGetterFunctions.put("uuid", Comunicazione::getUuid);
		attributeSetterBiConsumers.put(
			"uuid", (BiConsumer<Comunicazione, String>)Comunicazione::setUuid);
		attributeGetterFunctions.put(
			"comunicazioneId", Comunicazione::getComunicazioneId);
		attributeSetterBiConsumers.put(
			"comunicazioneId",
			(BiConsumer<Comunicazione, Long>)Comunicazione::setComunicazioneId);
		attributeGetterFunctions.put("groupId", Comunicazione::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<Comunicazione, Long>)Comunicazione::setGroupId);
		attributeGetterFunctions.put("companyId", Comunicazione::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<Comunicazione, Long>)Comunicazione::setCompanyId);
		attributeGetterFunctions.put("userId", Comunicazione::getUserId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<Comunicazione, Long>)Comunicazione::setUserId);
		attributeGetterFunctions.put("userName", Comunicazione::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<Comunicazione, String>)Comunicazione::setUserName);
		attributeGetterFunctions.put(
			"createDate", Comunicazione::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<Comunicazione, Date>)Comunicazione::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", Comunicazione::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<Comunicazione, Date>)Comunicazione::setModifiedDate);
		attributeGetterFunctions.put("titolo", Comunicazione::getTitolo);
		attributeSetterBiConsumers.put(
			"titolo",
			(BiConsumer<Comunicazione, String>)Comunicazione::setTitolo);
		attributeGetterFunctions.put(
			"descrizione", Comunicazione::getDescrizione);
		attributeSetterBiConsumers.put(
			"descrizione",
			(BiConsumer<Comunicazione, String>)Comunicazione::setDescrizione);
		attributeGetterFunctions.put("dataInvio", Comunicazione::getDataInvio);
		attributeSetterBiConsumers.put(
			"dataInvio",
			(BiConsumer<Comunicazione, Date>)Comunicazione::setDataInvio);
		attributeGetterFunctions.put(
			"dataInizio", Comunicazione::getDataInizio);
		attributeSetterBiConsumers.put(
			"dataInizio",
			(BiConsumer<Comunicazione, Date>)Comunicazione::setDataInizio);
		attributeGetterFunctions.put("dataFine", Comunicazione::getDataFine);
		attributeSetterBiConsumers.put(
			"dataFine",
			(BiConsumer<Comunicazione, Date>)Comunicazione::setDataFine);
		attributeGetterFunctions.put(
			"codiceServizio", Comunicazione::getCodiceServizio);
		attributeSetterBiConsumers.put(
			"codiceServizio",
			(BiConsumer<Comunicazione, String>)
				Comunicazione::setCodiceServizio);
		attributeGetterFunctions.put(
			"uriServizio", Comunicazione::getUriServizio);
		attributeSetterBiConsumers.put(
			"uriServizio",
			(BiConsumer<Comunicazione, String>)Comunicazione::setUriServizio);
		attributeGetterFunctions.put(
			"tipologiaComunicazioneId",
			Comunicazione::getTipologiaComunicazioneId);
		attributeSetterBiConsumers.put(
			"tipologiaComunicazioneId",
			(BiConsumer<Comunicazione, Long>)
				Comunicazione::setTipologiaComunicazioneId);
		attributeGetterFunctions.put(
			"organizationId", Comunicazione::getOrganizationId);
		attributeSetterBiConsumers.put(
			"organizationId",
			(BiConsumer<Comunicazione, Long>)Comunicazione::setOrganizationId);
		attributeGetterFunctions.put(
			"destinatarioUserId", Comunicazione::getDestinatarioUserId);
		attributeSetterBiConsumers.put(
			"destinatarioUserId",
			(BiConsumer<Comunicazione, Long>)
				Comunicazione::setDestinatarioUserId);
		attributeGetterFunctions.put(
			"destinatarioOrganizationId",
			Comunicazione::getDestinatarioOrganizationId);
		attributeSetterBiConsumers.put(
			"destinatarioOrganizationId",
			(BiConsumer<Comunicazione, Long>)
				Comunicazione::setDestinatarioOrganizationId);
		attributeGetterFunctions.put(
			"calendarBookingId", Comunicazione::getCalendarBookingId);
		attributeSetterBiConsumers.put(
			"calendarBookingId",
			(BiConsumer<Comunicazione, Long>)
				Comunicazione::setCalendarBookingId);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@Override
	public long getComunicazioneId() {
		return _comunicazioneId;
	}

	@Override
	public void setComunicazioneId(long comunicazioneId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_comunicazioneId = comunicazioneId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getTitolo() {
		if (_titolo == null) {
			return "";
		}
		else {
			return _titolo;
		}
	}

	@Override
	public void setTitolo(String titolo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_titolo = titolo;
	}

	@Override
	public String getDescrizione() {
		if (_descrizione == null) {
			return "";
		}
		else {
			return _descrizione;
		}
	}

	@Override
	public void setDescrizione(String descrizione) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_descrizione = descrizione;
	}

	@Override
	public Date getDataInvio() {
		return _dataInvio;
	}

	@Override
	public void setDataInvio(Date dataInvio) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dataInvio = dataInvio;
	}

	@Override
	public Date getDataInizio() {
		return _dataInizio;
	}

	@Override
	public void setDataInizio(Date dataInizio) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dataInizio = dataInizio;
	}

	@Override
	public Date getDataFine() {
		return _dataFine;
	}

	@Override
	public void setDataFine(Date dataFine) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dataFine = dataFine;
	}

	@Override
	public String getCodiceServizio() {
		if (_codiceServizio == null) {
			return "";
		}
		else {
			return _codiceServizio;
		}
	}

	@Override
	public void setCodiceServizio(String codiceServizio) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_codiceServizio = codiceServizio;
	}

	@Override
	public String getUriServizio() {
		if (_uriServizio == null) {
			return "";
		}
		else {
			return _uriServizio;
		}
	}

	@Override
	public void setUriServizio(String uriServizio) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uriServizio = uriServizio;
	}

	@Override
	public long getTipologiaComunicazioneId() {
		return _tipologiaComunicazioneId;
	}

	@Override
	public void setTipologiaComunicazioneId(long tipologiaComunicazioneId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_tipologiaComunicazioneId = tipologiaComunicazioneId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalTipologiaComunicazioneId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("tipologiaComunicazioneId"));
	}

	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_organizationId = organizationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalOrganizationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("organizationId"));
	}

	@Override
	public long getDestinatarioUserId() {
		return _destinatarioUserId;
	}

	@Override
	public void setDestinatarioUserId(long destinatarioUserId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_destinatarioUserId = destinatarioUserId;
	}

	@Override
	public String getDestinatarioUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(
				getDestinatarioUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setDestinatarioUserUuid(String destinatarioUserUuid) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalDestinatarioUserId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("destinatarioUserId"));
	}

	@Override
	public long getDestinatarioOrganizationId() {
		return _destinatarioOrganizationId;
	}

	@Override
	public void setDestinatarioOrganizationId(long destinatarioOrganizationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_destinatarioOrganizationId = destinatarioOrganizationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalDestinatarioOrganizationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("destinatarioOrganizationId"));
	}

	@Override
	public long getCalendarBookingId() {
		return _calendarBookingId;
	}

	@Override
	public void setCalendarBookingId(long calendarBookingId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_calendarBookingId = calendarBookingId;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(Comunicazione.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), Comunicazione.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Comunicazione toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, Comunicazione>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ComunicazioneImpl comunicazioneImpl = new ComunicazioneImpl();

		comunicazioneImpl.setUuid(getUuid());
		comunicazioneImpl.setComunicazioneId(getComunicazioneId());
		comunicazioneImpl.setGroupId(getGroupId());
		comunicazioneImpl.setCompanyId(getCompanyId());
		comunicazioneImpl.setUserId(getUserId());
		comunicazioneImpl.setUserName(getUserName());
		comunicazioneImpl.setCreateDate(getCreateDate());
		comunicazioneImpl.setModifiedDate(getModifiedDate());
		comunicazioneImpl.setTitolo(getTitolo());
		comunicazioneImpl.setDescrizione(getDescrizione());
		comunicazioneImpl.setDataInvio(getDataInvio());
		comunicazioneImpl.setDataInizio(getDataInizio());
		comunicazioneImpl.setDataFine(getDataFine());
		comunicazioneImpl.setCodiceServizio(getCodiceServizio());
		comunicazioneImpl.setUriServizio(getUriServizio());
		comunicazioneImpl.setTipologiaComunicazioneId(
			getTipologiaComunicazioneId());
		comunicazioneImpl.setOrganizationId(getOrganizationId());
		comunicazioneImpl.setDestinatarioUserId(getDestinatarioUserId());
		comunicazioneImpl.setDestinatarioOrganizationId(
			getDestinatarioOrganizationId());
		comunicazioneImpl.setCalendarBookingId(getCalendarBookingId());

		comunicazioneImpl.resetOriginalValues();

		return comunicazioneImpl;
	}

	@Override
	public Comunicazione cloneWithOriginalValues() {
		ComunicazioneImpl comunicazioneImpl = new ComunicazioneImpl();

		comunicazioneImpl.setUuid(this.<String>getColumnOriginalValue("uuid_"));
		comunicazioneImpl.setComunicazioneId(
			this.<Long>getColumnOriginalValue("comunicazioneId"));
		comunicazioneImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		comunicazioneImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		comunicazioneImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		comunicazioneImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		comunicazioneImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		comunicazioneImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		comunicazioneImpl.setTitolo(
			this.<String>getColumnOriginalValue("titolo"));
		comunicazioneImpl.setDescrizione(
			this.<String>getColumnOriginalValue("descrizione"));
		comunicazioneImpl.setDataInvio(
			this.<Date>getColumnOriginalValue("dataInvio"));
		comunicazioneImpl.setDataInizio(
			this.<Date>getColumnOriginalValue("dataInizio"));
		comunicazioneImpl.setDataFine(
			this.<Date>getColumnOriginalValue("dataFine"));
		comunicazioneImpl.setCodiceServizio(
			this.<String>getColumnOriginalValue("codiceServizio"));
		comunicazioneImpl.setUriServizio(
			this.<String>getColumnOriginalValue("uriServizio"));
		comunicazioneImpl.setTipologiaComunicazioneId(
			this.<Long>getColumnOriginalValue("tipologiaComunicazioneId"));
		comunicazioneImpl.setOrganizationId(
			this.<Long>getColumnOriginalValue("organizationId"));
		comunicazioneImpl.setDestinatarioUserId(
			this.<Long>getColumnOriginalValue("destinatarioUserId"));
		comunicazioneImpl.setDestinatarioOrganizationId(
			this.<Long>getColumnOriginalValue("destinatarioOrganizationId"));
		comunicazioneImpl.setCalendarBookingId(
			this.<Long>getColumnOriginalValue("calendarBookingId"));

		return comunicazioneImpl;
	}

	@Override
	public int compareTo(Comunicazione comunicazione) {
		long primaryKey = comunicazione.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof Comunicazione)) {
			return false;
		}

		Comunicazione comunicazione = (Comunicazione)object;

		long primaryKey = comunicazione.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<Comunicazione> toCacheModel() {
		ComunicazioneCacheModel comunicazioneCacheModel =
			new ComunicazioneCacheModel();

		comunicazioneCacheModel.uuid = getUuid();

		String uuid = comunicazioneCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			comunicazioneCacheModel.uuid = null;
		}

		comunicazioneCacheModel.comunicazioneId = getComunicazioneId();

		comunicazioneCacheModel.groupId = getGroupId();

		comunicazioneCacheModel.companyId = getCompanyId();

		comunicazioneCacheModel.userId = getUserId();

		comunicazioneCacheModel.userName = getUserName();

		String userName = comunicazioneCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			comunicazioneCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			comunicazioneCacheModel.createDate = createDate.getTime();
		}
		else {
			comunicazioneCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			comunicazioneCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			comunicazioneCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		comunicazioneCacheModel.titolo = getTitolo();

		String titolo = comunicazioneCacheModel.titolo;

		if ((titolo != null) && (titolo.length() == 0)) {
			comunicazioneCacheModel.titolo = null;
		}

		comunicazioneCacheModel.descrizione = getDescrizione();

		String descrizione = comunicazioneCacheModel.descrizione;

		if ((descrizione != null) && (descrizione.length() == 0)) {
			comunicazioneCacheModel.descrizione = null;
		}

		Date dataInvio = getDataInvio();

		if (dataInvio != null) {
			comunicazioneCacheModel.dataInvio = dataInvio.getTime();
		}
		else {
			comunicazioneCacheModel.dataInvio = Long.MIN_VALUE;
		}

		Date dataInizio = getDataInizio();

		if (dataInizio != null) {
			comunicazioneCacheModel.dataInizio = dataInizio.getTime();
		}
		else {
			comunicazioneCacheModel.dataInizio = Long.MIN_VALUE;
		}

		Date dataFine = getDataFine();

		if (dataFine != null) {
			comunicazioneCacheModel.dataFine = dataFine.getTime();
		}
		else {
			comunicazioneCacheModel.dataFine = Long.MIN_VALUE;
		}

		comunicazioneCacheModel.codiceServizio = getCodiceServizio();

		String codiceServizio = comunicazioneCacheModel.codiceServizio;

		if ((codiceServizio != null) && (codiceServizio.length() == 0)) {
			comunicazioneCacheModel.codiceServizio = null;
		}

		comunicazioneCacheModel.uriServizio = getUriServizio();

		String uriServizio = comunicazioneCacheModel.uriServizio;

		if ((uriServizio != null) && (uriServizio.length() == 0)) {
			comunicazioneCacheModel.uriServizio = null;
		}

		comunicazioneCacheModel.tipologiaComunicazioneId =
			getTipologiaComunicazioneId();

		comunicazioneCacheModel.organizationId = getOrganizationId();

		comunicazioneCacheModel.destinatarioUserId = getDestinatarioUserId();

		comunicazioneCacheModel.destinatarioOrganizationId =
			getDestinatarioOrganizationId();

		comunicazioneCacheModel.calendarBookingId = getCalendarBookingId();

		return comunicazioneCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<Comunicazione, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<Comunicazione, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Comunicazione, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((Comunicazione)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<Comunicazione, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<Comunicazione, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Comunicazione, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((Comunicazione)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, Comunicazione>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private String _uuid;
	private long _comunicazioneId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _titolo;
	private String _descrizione;
	private Date _dataInvio;
	private Date _dataInizio;
	private Date _dataFine;
	private String _codiceServizio;
	private String _uriServizio;
	private long _tipologiaComunicazioneId;
	private long _organizationId;
	private long _destinatarioUserId;
	private long _destinatarioOrganizationId;
	private long _calendarBookingId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<Comunicazione, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((Comunicazione)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("comunicazioneId", _comunicazioneId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("titolo", _titolo);
		_columnOriginalValues.put("descrizione", _descrizione);
		_columnOriginalValues.put("dataInvio", _dataInvio);
		_columnOriginalValues.put("dataInizio", _dataInizio);
		_columnOriginalValues.put("dataFine", _dataFine);
		_columnOriginalValues.put("codiceServizio", _codiceServizio);
		_columnOriginalValues.put("uriServizio", _uriServizio);
		_columnOriginalValues.put(
			"tipologiaComunicazioneId", _tipologiaComunicazioneId);
		_columnOriginalValues.put("organizationId", _organizationId);
		_columnOriginalValues.put("destinatarioUserId", _destinatarioUserId);
		_columnOriginalValues.put(
			"destinatarioOrganizationId", _destinatarioOrganizationId);
		_columnOriginalValues.put("calendarBookingId", _calendarBookingId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("comunicazioneId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("titolo", 256L);

		columnBitmasks.put("descrizione", 512L);

		columnBitmasks.put("dataInvio", 1024L);

		columnBitmasks.put("dataInizio", 2048L);

		columnBitmasks.put("dataFine", 4096L);

		columnBitmasks.put("codiceServizio", 8192L);

		columnBitmasks.put("uriServizio", 16384L);

		columnBitmasks.put("tipologiaComunicazioneId", 32768L);

		columnBitmasks.put("organizationId", 65536L);

		columnBitmasks.put("destinatarioUserId", 131072L);

		columnBitmasks.put("destinatarioOrganizationId", 262144L);

		columnBitmasks.put("calendarBookingId", 524288L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private Comunicazione _escapedModel;

}