/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.servizidigitali.gestioneservizi.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import it.servizidigitali.gestioneservizi.model.Servizio;
import it.servizidigitali.gestioneservizi.model.ServizioModel;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the Servizio service. Represents a row in the &quot;servizio&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>ServizioModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ServizioImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ServizioImpl
 * @generated
 */
public class ServizioModelImpl
	extends BaseModelImpl<Servizio> implements ServizioModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a servizio model instance should use the <code>Servizio</code> interface instead.
	 */
	public static final String TABLE_NAME = "servizio";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"servizioId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"nome", Types.VARCHAR}, {"descrizione", Types.VARCHAR},
		{"descrizioneEstesa", Types.VARCHAR}, {"codice", Types.VARCHAR},
		{"uri", Types.VARCHAR}, {"uriGuest", Types.VARCHAR},
		{"uriScheda", Types.VARCHAR}, {"autenticazione", Types.BOOLEAN},
		{"dataInizioAttivazione", Types.TIMESTAMP},
		{"dataFineAttivazione", Types.TIMESTAMP}, {"cittadino", Types.BOOLEAN},
		{"azienda", Types.BOOLEAN}, {"delega", Types.BOOLEAN},
		{"chatbot", Types.BOOLEAN}, {"gestioneBackoffice", Types.BOOLEAN},
		{"prenotabile", Types.BOOLEAN},
		{"codicePrestazioneINPS", Types.VARCHAR},
		{"privacyDelega", Types.BOOLEAN}, {"allegatoDelega", Types.BOOLEAN},
		{"timbroCertificato", Types.BOOLEAN}, {"attivo", Types.BOOLEAN}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("servizioId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("nome", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("descrizione", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("descrizioneEstesa", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("codice", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("uri", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("uriGuest", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("uriScheda", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("autenticazione", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("dataInizioAttivazione", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dataFineAttivazione", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("cittadino", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("azienda", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("delega", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("chatbot", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("gestioneBackoffice", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("prenotabile", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("codicePrestazioneINPS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("privacyDelega", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("allegatoDelega", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("timbroCertificato", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("attivo", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE =
		"create table servizio (uuid_ VARCHAR(75) null,servizioId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,nome VARCHAR(75) null,descrizione VARCHAR(75) null,descrizioneEstesa VARCHAR(75) null,codice VARCHAR(75) null,uri VARCHAR(75) null,uriGuest VARCHAR(75) null,uriScheda VARCHAR(75) null,autenticazione BOOLEAN,dataInizioAttivazione DATE null,dataFineAttivazione DATE null,cittadino BOOLEAN,azienda BOOLEAN,delega BOOLEAN,chatbot BOOLEAN,gestioneBackoffice BOOLEAN,prenotabile BOOLEAN,codicePrestazioneINPS VARCHAR(75) null,privacyDelega BOOLEAN,allegatoDelega BOOLEAN,timbroCertificato BOOLEAN,attivo BOOLEAN)";

	public static final String TABLE_SQL_DROP = "drop table servizio";

	public static final String ORDER_BY_JPQL = " ORDER BY servizio.nome ASC";

	public static final String ORDER_BY_SQL = " ORDER BY servizio.nome ASC";

	public static final String DATA_SOURCE = "servizidigitaliDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ATTIVO_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long CODICE_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long NOME_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public ServizioModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _servizioId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setServizioId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _servizioId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Servizio.class;
	}

	@Override
	public String getModelClassName() {
		return Servizio.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<Servizio, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<Servizio, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Servizio, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((Servizio)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<Servizio, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<Servizio, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(Servizio)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<Servizio, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<Servizio, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, Servizio>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			Servizio.class.getClassLoader(), Servizio.class,
			ModelWrapper.class);

		try {
			Constructor<Servizio> constructor =
				(Constructor<Servizio>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<Servizio, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<Servizio, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<Servizio, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<Servizio, Object>>();
		Map<String, BiConsumer<Servizio, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<Servizio, ?>>();

		attributeGetterFunctions.put("uuid", Servizio::getUuid);
		attributeSetterBiConsumers.put(
			"uuid", (BiConsumer<Servizio, String>)Servizio::setUuid);
		attributeGetterFunctions.put("servizioId", Servizio::getServizioId);
		attributeSetterBiConsumers.put(
			"servizioId", (BiConsumer<Servizio, Long>)Servizio::setServizioId);
		attributeGetterFunctions.put("groupId", Servizio::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId", (BiConsumer<Servizio, Long>)Servizio::setGroupId);
		attributeGetterFunctions.put("companyId", Servizio::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId", (BiConsumer<Servizio, Long>)Servizio::setCompanyId);
		attributeGetterFunctions.put("userId", Servizio::getUserId);
		attributeSetterBiConsumers.put(
			"userId", (BiConsumer<Servizio, Long>)Servizio::setUserId);
		attributeGetterFunctions.put("userName", Servizio::getUserName);
		attributeSetterBiConsumers.put(
			"userName", (BiConsumer<Servizio, String>)Servizio::setUserName);
		attributeGetterFunctions.put("createDate", Servizio::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate", (BiConsumer<Servizio, Date>)Servizio::setCreateDate);
		attributeGetterFunctions.put("modifiedDate", Servizio::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<Servizio, Date>)Servizio::setModifiedDate);
		attributeGetterFunctions.put("nome", Servizio::getNome);
		attributeSetterBiConsumers.put(
			"nome", (BiConsumer<Servizio, String>)Servizio::setNome);
		attributeGetterFunctions.put("descrizione", Servizio::getDescrizione);
		attributeSetterBiConsumers.put(
			"descrizione",
			(BiConsumer<Servizio, String>)Servizio::setDescrizione);
		attributeGetterFunctions.put(
			"descrizioneEstesa", Servizio::getDescrizioneEstesa);
		attributeSetterBiConsumers.put(
			"descrizioneEstesa",
			(BiConsumer<Servizio, String>)Servizio::setDescrizioneEstesa);
		attributeGetterFunctions.put("codice", Servizio::getCodice);
		attributeSetterBiConsumers.put(
			"codice", (BiConsumer<Servizio, String>)Servizio::setCodice);
		attributeGetterFunctions.put("uri", Servizio::getUri);
		attributeSetterBiConsumers.put(
			"uri", (BiConsumer<Servizio, String>)Servizio::setUri);
		attributeGetterFunctions.put("uriGuest", Servizio::getUriGuest);
		attributeSetterBiConsumers.put(
			"uriGuest", (BiConsumer<Servizio, String>)Servizio::setUriGuest);
		attributeGetterFunctions.put("uriScheda", Servizio::getUriScheda);
		attributeSetterBiConsumers.put(
			"uriScheda", (BiConsumer<Servizio, String>)Servizio::setUriScheda);
		attributeGetterFunctions.put(
			"autenticazione", Servizio::getAutenticazione);
		attributeSetterBiConsumers.put(
			"autenticazione",
			(BiConsumer<Servizio, Boolean>)Servizio::setAutenticazione);
		attributeGetterFunctions.put(
			"dataInizioAttivazione", Servizio::getDataInizioAttivazione);
		attributeSetterBiConsumers.put(
			"dataInizioAttivazione",
			(BiConsumer<Servizio, Date>)Servizio::setDataInizioAttivazione);
		attributeGetterFunctions.put(
			"dataFineAttivazione", Servizio::getDataFineAttivazione);
		attributeSetterBiConsumers.put(
			"dataFineAttivazione",
			(BiConsumer<Servizio, Date>)Servizio::setDataFineAttivazione);
		attributeGetterFunctions.put("cittadino", Servizio::getCittadino);
		attributeSetterBiConsumers.put(
			"cittadino", (BiConsumer<Servizio, Boolean>)Servizio::setCittadino);
		attributeGetterFunctions.put("azienda", Servizio::getAzienda);
		attributeSetterBiConsumers.put(
			"azienda", (BiConsumer<Servizio, Boolean>)Servizio::setAzienda);
		attributeGetterFunctions.put("delega", Servizio::getDelega);
		attributeSetterBiConsumers.put(
			"delega", (BiConsumer<Servizio, Boolean>)Servizio::setDelega);
		attributeGetterFunctions.put("chatbot", Servizio::getChatbot);
		attributeSetterBiConsumers.put(
			"chatbot", (BiConsumer<Servizio, Boolean>)Servizio::setChatbot);
		attributeGetterFunctions.put(
			"gestioneBackoffice", Servizio::getGestioneBackoffice);
		attributeSetterBiConsumers.put(
			"gestioneBackoffice",
			(BiConsumer<Servizio, Boolean>)Servizio::setGestioneBackoffice);
		attributeGetterFunctions.put("prenotabile", Servizio::getPrenotabile);
		attributeSetterBiConsumers.put(
			"prenotabile",
			(BiConsumer<Servizio, Boolean>)Servizio::setPrenotabile);
		attributeGetterFunctions.put(
			"codicePrestazioneINPS", Servizio::getCodicePrestazioneINPS);
		attributeSetterBiConsumers.put(
			"codicePrestazioneINPS",
			(BiConsumer<Servizio, String>)Servizio::setCodicePrestazioneINPS);
		attributeGetterFunctions.put(
			"privacyDelega", Servizio::getPrivacyDelega);
		attributeSetterBiConsumers.put(
			"privacyDelega",
			(BiConsumer<Servizio, Boolean>)Servizio::setPrivacyDelega);
		attributeGetterFunctions.put(
			"allegatoDelega", Servizio::getAllegatoDelega);
		attributeSetterBiConsumers.put(
			"allegatoDelega",
			(BiConsumer<Servizio, Boolean>)Servizio::setAllegatoDelega);
		attributeGetterFunctions.put(
			"timbroCertificato", Servizio::getTimbroCertificato);
		attributeSetterBiConsumers.put(
			"timbroCertificato",
			(BiConsumer<Servizio, Boolean>)Servizio::setTimbroCertificato);
		attributeGetterFunctions.put("attivo", Servizio::getAttivo);
		attributeSetterBiConsumers.put(
			"attivo", (BiConsumer<Servizio, Boolean>)Servizio::setAttivo);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@Override
	public long getServizioId() {
		return _servizioId;
	}

	@Override
	public void setServizioId(long servizioId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_servizioId = servizioId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getNome() {
		if (_nome == null) {
			return "";
		}
		else {
			return _nome;
		}
	}

	@Override
	public void setNome(String nome) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nome = nome;
	}

	@Override
	public String getDescrizione() {
		if (_descrizione == null) {
			return "";
		}
		else {
			return _descrizione;
		}
	}

	@Override
	public void setDescrizione(String descrizione) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_descrizione = descrizione;
	}

	@Override
	public String getDescrizioneEstesa() {
		if (_descrizioneEstesa == null) {
			return "";
		}
		else {
			return _descrizioneEstesa;
		}
	}

	@Override
	public void setDescrizioneEstesa(String descrizioneEstesa) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_descrizioneEstesa = descrizioneEstesa;
	}

	@Override
	public String getCodice() {
		if (_codice == null) {
			return "";
		}
		else {
			return _codice;
		}
	}

	@Override
	public void setCodice(String codice) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_codice = codice;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalCodice() {
		return getColumnOriginalValue("codice");
	}

	@Override
	public String getUri() {
		if (_uri == null) {
			return "";
		}
		else {
			return _uri;
		}
	}

	@Override
	public void setUri(String uri) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uri = uri;
	}

	@Override
	public String getUriGuest() {
		if (_uriGuest == null) {
			return "";
		}
		else {
			return _uriGuest;
		}
	}

	@Override
	public void setUriGuest(String uriGuest) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uriGuest = uriGuest;
	}

	@Override
	public String getUriScheda() {
		if (_uriScheda == null) {
			return "";
		}
		else {
			return _uriScheda;
		}
	}

	@Override
	public void setUriScheda(String uriScheda) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uriScheda = uriScheda;
	}

	@Override
	public boolean getAutenticazione() {
		return _autenticazione;
	}

	@Override
	public boolean isAutenticazione() {
		return _autenticazione;
	}

	@Override
	public void setAutenticazione(boolean autenticazione) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_autenticazione = autenticazione;
	}

	@Override
	public Date getDataInizioAttivazione() {
		return _dataInizioAttivazione;
	}

	@Override
	public void setDataInizioAttivazione(Date dataInizioAttivazione) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dataInizioAttivazione = dataInizioAttivazione;
	}

	@Override
	public Date getDataFineAttivazione() {
		return _dataFineAttivazione;
	}

	@Override
	public void setDataFineAttivazione(Date dataFineAttivazione) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dataFineAttivazione = dataFineAttivazione;
	}

	@Override
	public boolean getCittadino() {
		return _cittadino;
	}

	@Override
	public boolean isCittadino() {
		return _cittadino;
	}

	@Override
	public void setCittadino(boolean cittadino) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cittadino = cittadino;
	}

	@Override
	public boolean getAzienda() {
		return _azienda;
	}

	@Override
	public boolean isAzienda() {
		return _azienda;
	}

	@Override
	public void setAzienda(boolean azienda) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_azienda = azienda;
	}

	@Override
	public boolean getDelega() {
		return _delega;
	}

	@Override
	public boolean isDelega() {
		return _delega;
	}

	@Override
	public void setDelega(boolean delega) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_delega = delega;
	}

	@Override
	public boolean getChatbot() {
		return _chatbot;
	}

	@Override
	public boolean isChatbot() {
		return _chatbot;
	}

	@Override
	public void setChatbot(boolean chatbot) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_chatbot = chatbot;
	}

	@Override
	public boolean getGestioneBackoffice() {
		return _gestioneBackoffice;
	}

	@Override
	public boolean isGestioneBackoffice() {
		return _gestioneBackoffice;
	}

	@Override
	public void setGestioneBackoffice(boolean gestioneBackoffice) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_gestioneBackoffice = gestioneBackoffice;
	}

	@Override
	public boolean getPrenotabile() {
		return _prenotabile;
	}

	@Override
	public boolean isPrenotabile() {
		return _prenotabile;
	}

	@Override
	public void setPrenotabile(boolean prenotabile) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_prenotabile = prenotabile;
	}

	@Override
	public String getCodicePrestazioneINPS() {
		if (_codicePrestazioneINPS == null) {
			return "";
		}
		else {
			return _codicePrestazioneINPS;
		}
	}

	@Override
	public void setCodicePrestazioneINPS(String codicePrestazioneINPS) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_codicePrestazioneINPS = codicePrestazioneINPS;
	}

	@Override
	public boolean getPrivacyDelega() {
		return _privacyDelega;
	}

	@Override
	public boolean isPrivacyDelega() {
		return _privacyDelega;
	}

	@Override
	public void setPrivacyDelega(boolean privacyDelega) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_privacyDelega = privacyDelega;
	}

	@Override
	public boolean getAllegatoDelega() {
		return _allegatoDelega;
	}

	@Override
	public boolean isAllegatoDelega() {
		return _allegatoDelega;
	}

	@Override
	public void setAllegatoDelega(boolean allegatoDelega) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_allegatoDelega = allegatoDelega;
	}

	@Override
	public boolean getTimbroCertificato() {
		return _timbroCertificato;
	}

	@Override
	public boolean isTimbroCertificato() {
		return _timbroCertificato;
	}

	@Override
	public void setTimbroCertificato(boolean timbroCertificato) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_timbroCertificato = timbroCertificato;
	}

	@Override
	public boolean getAttivo() {
		return _attivo;
	}

	@Override
	public boolean isAttivo() {
		return _attivo;
	}

	@Override
	public void setAttivo(boolean attivo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_attivo = attivo;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public boolean getOriginalAttivo() {
		return GetterUtil.getBoolean(
			this.<Boolean>getColumnOriginalValue("attivo"));
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(Servizio.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), Servizio.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Servizio toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, Servizio>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ServizioImpl servizioImpl = new ServizioImpl();

		servizioImpl.setUuid(getUuid());
		servizioImpl.setServizioId(getServizioId());
		servizioImpl.setGroupId(getGroupId());
		servizioImpl.setCompanyId(getCompanyId());
		servizioImpl.setUserId(getUserId());
		servizioImpl.setUserName(getUserName());
		servizioImpl.setCreateDate(getCreateDate());
		servizioImpl.setModifiedDate(getModifiedDate());
		servizioImpl.setNome(getNome());
		servizioImpl.setDescrizione(getDescrizione());
		servizioImpl.setDescrizioneEstesa(getDescrizioneEstesa());
		servizioImpl.setCodice(getCodice());
		servizioImpl.setUri(getUri());
		servizioImpl.setUriGuest(getUriGuest());
		servizioImpl.setUriScheda(getUriScheda());
		servizioImpl.setAutenticazione(isAutenticazione());
		servizioImpl.setDataInizioAttivazione(getDataInizioAttivazione());
		servizioImpl.setDataFineAttivazione(getDataFineAttivazione());
		servizioImpl.setCittadino(isCittadino());
		servizioImpl.setAzienda(isAzienda());
		servizioImpl.setDelega(isDelega());
		servizioImpl.setChatbot(isChatbot());
		servizioImpl.setGestioneBackoffice(isGestioneBackoffice());
		servizioImpl.setPrenotabile(isPrenotabile());
		servizioImpl.setCodicePrestazioneINPS(getCodicePrestazioneINPS());
		servizioImpl.setPrivacyDelega(isPrivacyDelega());
		servizioImpl.setAllegatoDelega(isAllegatoDelega());
		servizioImpl.setTimbroCertificato(isTimbroCertificato());
		servizioImpl.setAttivo(isAttivo());

		servizioImpl.resetOriginalValues();

		return servizioImpl;
	}

	@Override
	public Servizio cloneWithOriginalValues() {
		ServizioImpl servizioImpl = new ServizioImpl();

		servizioImpl.setUuid(this.<String>getColumnOriginalValue("uuid_"));
		servizioImpl.setServizioId(
			this.<Long>getColumnOriginalValue("servizioId"));
		servizioImpl.setGroupId(this.<Long>getColumnOriginalValue("groupId"));
		servizioImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		servizioImpl.setUserId(this.<Long>getColumnOriginalValue("userId"));
		servizioImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		servizioImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		servizioImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		servizioImpl.setNome(this.<String>getColumnOriginalValue("nome"));
		servizioImpl.setDescrizione(
			this.<String>getColumnOriginalValue("descrizione"));
		servizioImpl.setDescrizioneEstesa(
			this.<String>getColumnOriginalValue("descrizioneEstesa"));
		servizioImpl.setCodice(this.<String>getColumnOriginalValue("codice"));
		servizioImpl.setUri(this.<String>getColumnOriginalValue("uri"));
		servizioImpl.setUriGuest(
			this.<String>getColumnOriginalValue("uriGuest"));
		servizioImpl.setUriScheda(
			this.<String>getColumnOriginalValue("uriScheda"));
		servizioImpl.setAutenticazione(
			this.<Boolean>getColumnOriginalValue("autenticazione"));
		servizioImpl.setDataInizioAttivazione(
			this.<Date>getColumnOriginalValue("dataInizioAttivazione"));
		servizioImpl.setDataFineAttivazione(
			this.<Date>getColumnOriginalValue("dataFineAttivazione"));
		servizioImpl.setCittadino(
			this.<Boolean>getColumnOriginalValue("cittadino"));
		servizioImpl.setAzienda(
			this.<Boolean>getColumnOriginalValue("azienda"));
		servizioImpl.setDelega(this.<Boolean>getColumnOriginalValue("delega"));
		servizioImpl.setChatbot(
			this.<Boolean>getColumnOriginalValue("chatbot"));
		servizioImpl.setGestioneBackoffice(
			this.<Boolean>getColumnOriginalValue("gestioneBackoffice"));
		servizioImpl.setPrenotabile(
			this.<Boolean>getColumnOriginalValue("prenotabile"));
		servizioImpl.setCodicePrestazioneINPS(
			this.<String>getColumnOriginalValue("codicePrestazioneINPS"));
		servizioImpl.setPrivacyDelega(
			this.<Boolean>getColumnOriginalValue("privacyDelega"));
		servizioImpl.setAllegatoDelega(
			this.<Boolean>getColumnOriginalValue("allegatoDelega"));
		servizioImpl.setTimbroCertificato(
			this.<Boolean>getColumnOriginalValue("timbroCertificato"));
		servizioImpl.setAttivo(this.<Boolean>getColumnOriginalValue("attivo"));

		return servizioImpl;
	}

	@Override
	public int compareTo(Servizio servizio) {
		int value = 0;

		value = getNome().compareTo(servizio.getNome());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof Servizio)) {
			return false;
		}

		Servizio servizio = (Servizio)object;

		long primaryKey = servizio.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<Servizio> toCacheModel() {
		ServizioCacheModel servizioCacheModel = new ServizioCacheModel();

		servizioCacheModel.uuid = getUuid();

		String uuid = servizioCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			servizioCacheModel.uuid = null;
		}

		servizioCacheModel.servizioId = getServizioId();

		servizioCacheModel.groupId = getGroupId();

		servizioCacheModel.companyId = getCompanyId();

		servizioCacheModel.userId = getUserId();

		servizioCacheModel.userName = getUserName();

		String userName = servizioCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			servizioCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			servizioCacheModel.createDate = createDate.getTime();
		}
		else {
			servizioCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			servizioCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			servizioCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		servizioCacheModel.nome = getNome();

		String nome = servizioCacheModel.nome;

		if ((nome != null) && (nome.length() == 0)) {
			servizioCacheModel.nome = null;
		}

		servizioCacheModel.descrizione = getDescrizione();

		String descrizione = servizioCacheModel.descrizione;

		if ((descrizione != null) && (descrizione.length() == 0)) {
			servizioCacheModel.descrizione = null;
		}

		servizioCacheModel.descrizioneEstesa = getDescrizioneEstesa();

		String descrizioneEstesa = servizioCacheModel.descrizioneEstesa;

		if ((descrizioneEstesa != null) && (descrizioneEstesa.length() == 0)) {
			servizioCacheModel.descrizioneEstesa = null;
		}

		servizioCacheModel.codice = getCodice();

		String codice = servizioCacheModel.codice;

		if ((codice != null) && (codice.length() == 0)) {
			servizioCacheModel.codice = null;
		}

		servizioCacheModel.uri = getUri();

		String uri = servizioCacheModel.uri;

		if ((uri != null) && (uri.length() == 0)) {
			servizioCacheModel.uri = null;
		}

		servizioCacheModel.uriGuest = getUriGuest();

		String uriGuest = servizioCacheModel.uriGuest;

		if ((uriGuest != null) && (uriGuest.length() == 0)) {
			servizioCacheModel.uriGuest = null;
		}

		servizioCacheModel.uriScheda = getUriScheda();

		String uriScheda = servizioCacheModel.uriScheda;

		if ((uriScheda != null) && (uriScheda.length() == 0)) {
			servizioCacheModel.uriScheda = null;
		}

		servizioCacheModel.autenticazione = isAutenticazione();

		Date dataInizioAttivazione = getDataInizioAttivazione();

		if (dataInizioAttivazione != null) {
			servizioCacheModel.dataInizioAttivazione =
				dataInizioAttivazione.getTime();
		}
		else {
			servizioCacheModel.dataInizioAttivazione = Long.MIN_VALUE;
		}

		Date dataFineAttivazione = getDataFineAttivazione();

		if (dataFineAttivazione != null) {
			servizioCacheModel.dataFineAttivazione =
				dataFineAttivazione.getTime();
		}
		else {
			servizioCacheModel.dataFineAttivazione = Long.MIN_VALUE;
		}

		servizioCacheModel.cittadino = isCittadino();

		servizioCacheModel.azienda = isAzienda();

		servizioCacheModel.delega = isDelega();

		servizioCacheModel.chatbot = isChatbot();

		servizioCacheModel.gestioneBackoffice = isGestioneBackoffice();

		servizioCacheModel.prenotabile = isPrenotabile();

		servizioCacheModel.codicePrestazioneINPS = getCodicePrestazioneINPS();

		String codicePrestazioneINPS = servizioCacheModel.codicePrestazioneINPS;

		if ((codicePrestazioneINPS != null) &&
			(codicePrestazioneINPS.length() == 0)) {

			servizioCacheModel.codicePrestazioneINPS = null;
		}

		servizioCacheModel.privacyDelega = isPrivacyDelega();

		servizioCacheModel.allegatoDelega = isAllegatoDelega();

		servizioCacheModel.timbroCertificato = isTimbroCertificato();

		servizioCacheModel.attivo = isAttivo();

		return servizioCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<Servizio, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<Servizio, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Servizio, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((Servizio)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<Servizio, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<Servizio, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Servizio, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((Servizio)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, Servizio>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private String _uuid;
	private long _servizioId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _nome;
	private String _descrizione;
	private String _descrizioneEstesa;
	private String _codice;
	private String _uri;
	private String _uriGuest;
	private String _uriScheda;
	private boolean _autenticazione;
	private Date _dataInizioAttivazione;
	private Date _dataFineAttivazione;
	private boolean _cittadino;
	private boolean _azienda;
	private boolean _delega;
	private boolean _chatbot;
	private boolean _gestioneBackoffice;
	private boolean _prenotabile;
	private String _codicePrestazioneINPS;
	private boolean _privacyDelega;
	private boolean _allegatoDelega;
	private boolean _timbroCertificato;
	private boolean _attivo;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<Servizio, Object> function = _attributeGetterFunctions.get(
			columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((Servizio)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("servizioId", _servizioId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("nome", _nome);
		_columnOriginalValues.put("descrizione", _descrizione);
		_columnOriginalValues.put("descrizioneEstesa", _descrizioneEstesa);
		_columnOriginalValues.put("codice", _codice);
		_columnOriginalValues.put("uri", _uri);
		_columnOriginalValues.put("uriGuest", _uriGuest);
		_columnOriginalValues.put("uriScheda", _uriScheda);
		_columnOriginalValues.put("autenticazione", _autenticazione);
		_columnOriginalValues.put(
			"dataInizioAttivazione", _dataInizioAttivazione);
		_columnOriginalValues.put("dataFineAttivazione", _dataFineAttivazione);
		_columnOriginalValues.put("cittadino", _cittadino);
		_columnOriginalValues.put("azienda", _azienda);
		_columnOriginalValues.put("delega", _delega);
		_columnOriginalValues.put("chatbot", _chatbot);
		_columnOriginalValues.put("gestioneBackoffice", _gestioneBackoffice);
		_columnOriginalValues.put("prenotabile", _prenotabile);
		_columnOriginalValues.put(
			"codicePrestazioneINPS", _codicePrestazioneINPS);
		_columnOriginalValues.put("privacyDelega", _privacyDelega);
		_columnOriginalValues.put("allegatoDelega", _allegatoDelega);
		_columnOriginalValues.put("timbroCertificato", _timbroCertificato);
		_columnOriginalValues.put("attivo", _attivo);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("servizioId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("nome", 256L);

		columnBitmasks.put("descrizione", 512L);

		columnBitmasks.put("descrizioneEstesa", 1024L);

		columnBitmasks.put("codice", 2048L);

		columnBitmasks.put("uri", 4096L);

		columnBitmasks.put("uriGuest", 8192L);

		columnBitmasks.put("uriScheda", 16384L);

		columnBitmasks.put("autenticazione", 32768L);

		columnBitmasks.put("dataInizioAttivazione", 65536L);

		columnBitmasks.put("dataFineAttivazione", 131072L);

		columnBitmasks.put("cittadino", 262144L);

		columnBitmasks.put("azienda", 524288L);

		columnBitmasks.put("delega", 1048576L);

		columnBitmasks.put("chatbot", 2097152L);

		columnBitmasks.put("gestioneBackoffice", 4194304L);

		columnBitmasks.put("prenotabile", 8388608L);

		columnBitmasks.put("codicePrestazioneINPS", 16777216L);

		columnBitmasks.put("privacyDelega", 33554432L);

		columnBitmasks.put("allegatoDelega", 67108864L);

		columnBitmasks.put("timbroCertificato", 134217728L);

		columnBitmasks.put("attivo", 268435456L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private Servizio _escapedModel;

}