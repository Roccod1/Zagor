/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.servizidigitali.gestionepagamenti.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import it.servizidigitali.gestionepagamenti.model.Pagamento;
import it.servizidigitali.gestionepagamenti.model.PagamentoModel;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.math.BigDecimal;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the Pagamento service. Represents a row in the &quot;pagamento&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>PagamentoModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PagamentoImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see PagamentoImpl
 * @generated
 */
public class PagamentoModelImpl
	extends BaseModelImpl<Pagamento> implements PagamentoModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a pagamento model instance should use the <code>Pagamento</code> interface instead.
	 */
	public static final String TABLE_NAME = "pagamento";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"pagamentoId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"idCredito", Types.VARCHAR}, {"idFiscaleCliente", Types.VARCHAR},
		{"denominazioneCliente", Types.VARCHAR},
		{"emailQuietanza", Types.VARCHAR}, {"causale", Types.VARCHAR},
		{"servizioId", Types.BIGINT}, {"nomeServizio", Types.VARCHAR},
		{"importo", Types.DECIMAL}, {"commissioni", Types.DECIMAL},
		{"canale", Types.VARCHAR}, {"gateway", Types.VARCHAR},
		{"iud", Types.VARCHAR}, {"iuv", Types.VARCHAR},
		{"idSessione", Types.VARCHAR}, {"pathAvviso", Types.VARCHAR},
		{"emailInviata", Types.BOOLEAN}, {"stato", Types.VARCHAR},
		{"richiestaId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pagamentoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("idCredito", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("idFiscaleCliente", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("denominazioneCliente", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("emailQuietanza", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("causale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("servizioId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("nomeServizio", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("importo", Types.DECIMAL);
		TABLE_COLUMNS_MAP.put("commissioni", Types.DECIMAL);
		TABLE_COLUMNS_MAP.put("canale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("gateway", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("iud", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("iuv", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("idSessione", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("pathAvviso", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("emailInviata", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("stato", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("richiestaId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table pagamento (uuid_ VARCHAR(75) null,pagamentoId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,idCredito VARCHAR(75) null,idFiscaleCliente VARCHAR(75) null,denominazioneCliente VARCHAR(75) null,emailQuietanza VARCHAR(75) null,causale VARCHAR(75) null,servizioId LONG,nomeServizio VARCHAR(75) null,importo DECIMAL(30, 16) null,commissioni DECIMAL(30, 16) null,canale VARCHAR(75) null,gateway VARCHAR(75) null,iud VARCHAR(75) null,iuv VARCHAR(75) null,idSessione VARCHAR(75) null,pathAvviso VARCHAR(75) null,emailInviata BOOLEAN,stato VARCHAR(75) null,richiestaId LONG)";

	public static final String TABLE_SQL_DROP = "drop table pagamento";

	public static final String ORDER_BY_JPQL =
		" ORDER BY pagamento.pagamentoId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY pagamento.pagamentoId ASC";

	public static final String DATA_SOURCE = "servizidigitaliDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long EMAILINVIATA_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long IDCREDITO_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long IDFISCALECLIENTE_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long IDSESSIONE_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long IUD_COLUMN_BITMASK = 64L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long IUV_COLUMN_BITMASK = 128L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long RICHIESTAID_COLUMN_BITMASK = 256L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long STATO_COLUMN_BITMASK = 512L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 1024L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PAGAMENTOID_COLUMN_BITMASK = 2048L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public PagamentoModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _pagamentoId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPagamentoId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _pagamentoId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Pagamento.class;
	}

	@Override
	public String getModelClassName() {
		return Pagamento.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<Pagamento, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<Pagamento, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Pagamento, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName, attributeGetterFunction.apply((Pagamento)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<Pagamento, Object>> attributeSetterBiConsumers =
			getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<Pagamento, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(Pagamento)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<Pagamento, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<Pagamento, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, Pagamento>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			Pagamento.class.getClassLoader(), Pagamento.class,
			ModelWrapper.class);

		try {
			Constructor<Pagamento> constructor =
				(Constructor<Pagamento>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<Pagamento, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<Pagamento, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<Pagamento, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<Pagamento, Object>>();
		Map<String, BiConsumer<Pagamento, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<Pagamento, ?>>();

		attributeGetterFunctions.put("uuid", Pagamento::getUuid);
		attributeSetterBiConsumers.put(
			"uuid", (BiConsumer<Pagamento, String>)Pagamento::setUuid);
		attributeGetterFunctions.put("pagamentoId", Pagamento::getPagamentoId);
		attributeSetterBiConsumers.put(
			"pagamentoId",
			(BiConsumer<Pagamento, Long>)Pagamento::setPagamentoId);
		attributeGetterFunctions.put("groupId", Pagamento::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId", (BiConsumer<Pagamento, Long>)Pagamento::setGroupId);
		attributeGetterFunctions.put("companyId", Pagamento::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId", (BiConsumer<Pagamento, Long>)Pagamento::setCompanyId);
		attributeGetterFunctions.put("userId", Pagamento::getUserId);
		attributeSetterBiConsumers.put(
			"userId", (BiConsumer<Pagamento, Long>)Pagamento::setUserId);
		attributeGetterFunctions.put("userName", Pagamento::getUserName);
		attributeSetterBiConsumers.put(
			"userName", (BiConsumer<Pagamento, String>)Pagamento::setUserName);
		attributeGetterFunctions.put("createDate", Pagamento::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<Pagamento, Date>)Pagamento::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", Pagamento::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<Pagamento, Date>)Pagamento::setModifiedDate);
		attributeGetterFunctions.put("idCredito", Pagamento::getIdCredito);
		attributeSetterBiConsumers.put(
			"idCredito",
			(BiConsumer<Pagamento, String>)Pagamento::setIdCredito);
		attributeGetterFunctions.put(
			"idFiscaleCliente", Pagamento::getIdFiscaleCliente);
		attributeSetterBiConsumers.put(
			"idFiscaleCliente",
			(BiConsumer<Pagamento, String>)Pagamento::setIdFiscaleCliente);
		attributeGetterFunctions.put(
			"denominazioneCliente", Pagamento::getDenominazioneCliente);
		attributeSetterBiConsumers.put(
			"denominazioneCliente",
			(BiConsumer<Pagamento, String>)Pagamento::setDenominazioneCliente);
		attributeGetterFunctions.put(
			"emailQuietanza", Pagamento::getEmailQuietanza);
		attributeSetterBiConsumers.put(
			"emailQuietanza",
			(BiConsumer<Pagamento, String>)Pagamento::setEmailQuietanza);
		attributeGetterFunctions.put("causale", Pagamento::getCausale);
		attributeSetterBiConsumers.put(
			"causale", (BiConsumer<Pagamento, String>)Pagamento::setCausale);
		attributeGetterFunctions.put("servizioId", Pagamento::getServizioId);
		attributeSetterBiConsumers.put(
			"servizioId",
			(BiConsumer<Pagamento, Long>)Pagamento::setServizioId);
		attributeGetterFunctions.put(
			"nomeServizio", Pagamento::getNomeServizio);
		attributeSetterBiConsumers.put(
			"nomeServizio",
			(BiConsumer<Pagamento, String>)Pagamento::setNomeServizio);
		attributeGetterFunctions.put("importo", Pagamento::getImporto);
		attributeSetterBiConsumers.put(
			"importo",
			(BiConsumer<Pagamento, BigDecimal>)Pagamento::setImporto);
		attributeGetterFunctions.put("commissioni", Pagamento::getCommissioni);
		attributeSetterBiConsumers.put(
			"commissioni",
			(BiConsumer<Pagamento, BigDecimal>)Pagamento::setCommissioni);
		attributeGetterFunctions.put("canale", Pagamento::getCanale);
		attributeSetterBiConsumers.put(
			"canale", (BiConsumer<Pagamento, String>)Pagamento::setCanale);
		attributeGetterFunctions.put("gateway", Pagamento::getGateway);
		attributeSetterBiConsumers.put(
			"gateway", (BiConsumer<Pagamento, String>)Pagamento::setGateway);
		attributeGetterFunctions.put("iud", Pagamento::getIud);
		attributeSetterBiConsumers.put(
			"iud", (BiConsumer<Pagamento, String>)Pagamento::setIud);
		attributeGetterFunctions.put("iuv", Pagamento::getIuv);
		attributeSetterBiConsumers.put(
			"iuv", (BiConsumer<Pagamento, String>)Pagamento::setIuv);
		attributeGetterFunctions.put("idSessione", Pagamento::getIdSessione);
		attributeSetterBiConsumers.put(
			"idSessione",
			(BiConsumer<Pagamento, String>)Pagamento::setIdSessione);
		attributeGetterFunctions.put("pathAvviso", Pagamento::getPathAvviso);
		attributeSetterBiConsumers.put(
			"pathAvviso",
			(BiConsumer<Pagamento, String>)Pagamento::setPathAvviso);
		attributeGetterFunctions.put(
			"emailInviata", Pagamento::getEmailInviata);
		attributeSetterBiConsumers.put(
			"emailInviata",
			(BiConsumer<Pagamento, Boolean>)Pagamento::setEmailInviata);
		attributeGetterFunctions.put("stato", Pagamento::getStato);
		attributeSetterBiConsumers.put(
			"stato", (BiConsumer<Pagamento, String>)Pagamento::setStato);
		attributeGetterFunctions.put("richiestaId", Pagamento::getRichiestaId);
		attributeSetterBiConsumers.put(
			"richiestaId",
			(BiConsumer<Pagamento, Long>)Pagamento::setRichiestaId);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@Override
	public long getPagamentoId() {
		return _pagamentoId;
	}

	@Override
	public void setPagamentoId(long pagamentoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pagamentoId = pagamentoId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getIdCredito() {
		if (_idCredito == null) {
			return "";
		}
		else {
			return _idCredito;
		}
	}

	@Override
	public void setIdCredito(String idCredito) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_idCredito = idCredito;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalIdCredito() {
		return getColumnOriginalValue("idCredito");
	}

	@Override
	public String getIdFiscaleCliente() {
		if (_idFiscaleCliente == null) {
			return "";
		}
		else {
			return _idFiscaleCliente;
		}
	}

	@Override
	public void setIdFiscaleCliente(String idFiscaleCliente) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_idFiscaleCliente = idFiscaleCliente;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalIdFiscaleCliente() {
		return getColumnOriginalValue("idFiscaleCliente");
	}

	@Override
	public String getDenominazioneCliente() {
		if (_denominazioneCliente == null) {
			return "";
		}
		else {
			return _denominazioneCliente;
		}
	}

	@Override
	public void setDenominazioneCliente(String denominazioneCliente) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_denominazioneCliente = denominazioneCliente;
	}

	@Override
	public String getEmailQuietanza() {
		if (_emailQuietanza == null) {
			return "";
		}
		else {
			return _emailQuietanza;
		}
	}

	@Override
	public void setEmailQuietanza(String emailQuietanza) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_emailQuietanza = emailQuietanza;
	}

	@Override
	public String getCausale() {
		if (_causale == null) {
			return "";
		}
		else {
			return _causale;
		}
	}

	@Override
	public void setCausale(String causale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_causale = causale;
	}

	@Override
	public long getServizioId() {
		return _servizioId;
	}

	@Override
	public void setServizioId(long servizioId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_servizioId = servizioId;
	}

	@Override
	public String getNomeServizio() {
		if (_nomeServizio == null) {
			return "";
		}
		else {
			return _nomeServizio;
		}
	}

	@Override
	public void setNomeServizio(String nomeServizio) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nomeServizio = nomeServizio;
	}

	@Override
	public BigDecimal getImporto() {
		return _importo;
	}

	@Override
	public void setImporto(BigDecimal importo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_importo = importo;
	}

	@Override
	public BigDecimal getCommissioni() {
		return _commissioni;
	}

	@Override
	public void setCommissioni(BigDecimal commissioni) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_commissioni = commissioni;
	}

	@Override
	public String getCanale() {
		if (_canale == null) {
			return "";
		}
		else {
			return _canale;
		}
	}

	@Override
	public void setCanale(String canale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_canale = canale;
	}

	@Override
	public String getGateway() {
		if (_gateway == null) {
			return "";
		}
		else {
			return _gateway;
		}
	}

	@Override
	public void setGateway(String gateway) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_gateway = gateway;
	}

	@Override
	public String getIud() {
		if (_iud == null) {
			return "";
		}
		else {
			return _iud;
		}
	}

	@Override
	public void setIud(String iud) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_iud = iud;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalIud() {
		return getColumnOriginalValue("iud");
	}

	@Override
	public String getIuv() {
		if (_iuv == null) {
			return "";
		}
		else {
			return _iuv;
		}
	}

	@Override
	public void setIuv(String iuv) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_iuv = iuv;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalIuv() {
		return getColumnOriginalValue("iuv");
	}

	@Override
	public String getIdSessione() {
		if (_idSessione == null) {
			return "";
		}
		else {
			return _idSessione;
		}
	}

	@Override
	public void setIdSessione(String idSessione) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_idSessione = idSessione;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalIdSessione() {
		return getColumnOriginalValue("idSessione");
	}

	@Override
	public String getPathAvviso() {
		if (_pathAvviso == null) {
			return "";
		}
		else {
			return _pathAvviso;
		}
	}

	@Override
	public void setPathAvviso(String pathAvviso) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_pathAvviso = pathAvviso;
	}

	@Override
	public boolean getEmailInviata() {
		return _emailInviata;
	}

	@Override
	public boolean isEmailInviata() {
		return _emailInviata;
	}

	@Override
	public void setEmailInviata(boolean emailInviata) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_emailInviata = emailInviata;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public boolean getOriginalEmailInviata() {
		return GetterUtil.getBoolean(
			this.<Boolean>getColumnOriginalValue("emailInviata"));
	}

	@Override
	public String getStato() {
		if (_stato == null) {
			return "";
		}
		else {
			return _stato;
		}
	}

	@Override
	public void setStato(String stato) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_stato = stato;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalStato() {
		return getColumnOriginalValue("stato");
	}

	@Override
	public long getRichiestaId() {
		return _richiestaId;
	}

	@Override
	public void setRichiestaId(long richiestaId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_richiestaId = richiestaId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalRichiestaId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("richiestaId"));
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(Pagamento.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), Pagamento.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Pagamento toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, Pagamento>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PagamentoImpl pagamentoImpl = new PagamentoImpl();

		pagamentoImpl.setUuid(getUuid());
		pagamentoImpl.setPagamentoId(getPagamentoId());
		pagamentoImpl.setGroupId(getGroupId());
		pagamentoImpl.setCompanyId(getCompanyId());
		pagamentoImpl.setUserId(getUserId());
		pagamentoImpl.setUserName(getUserName());
		pagamentoImpl.setCreateDate(getCreateDate());
		pagamentoImpl.setModifiedDate(getModifiedDate());
		pagamentoImpl.setIdCredito(getIdCredito());
		pagamentoImpl.setIdFiscaleCliente(getIdFiscaleCliente());
		pagamentoImpl.setDenominazioneCliente(getDenominazioneCliente());
		pagamentoImpl.setEmailQuietanza(getEmailQuietanza());
		pagamentoImpl.setCausale(getCausale());
		pagamentoImpl.setServizioId(getServizioId());
		pagamentoImpl.setNomeServizio(getNomeServizio());
		pagamentoImpl.setImporto(getImporto());
		pagamentoImpl.setCommissioni(getCommissioni());
		pagamentoImpl.setCanale(getCanale());
		pagamentoImpl.setGateway(getGateway());
		pagamentoImpl.setIud(getIud());
		pagamentoImpl.setIuv(getIuv());
		pagamentoImpl.setIdSessione(getIdSessione());
		pagamentoImpl.setPathAvviso(getPathAvviso());
		pagamentoImpl.setEmailInviata(isEmailInviata());
		pagamentoImpl.setStato(getStato());
		pagamentoImpl.setRichiestaId(getRichiestaId());

		pagamentoImpl.resetOriginalValues();

		return pagamentoImpl;
	}

	@Override
	public Pagamento cloneWithOriginalValues() {
		PagamentoImpl pagamentoImpl = new PagamentoImpl();

		pagamentoImpl.setUuid(this.<String>getColumnOriginalValue("uuid_"));
		pagamentoImpl.setPagamentoId(
			this.<Long>getColumnOriginalValue("pagamentoId"));
		pagamentoImpl.setGroupId(this.<Long>getColumnOriginalValue("groupId"));
		pagamentoImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		pagamentoImpl.setUserId(this.<Long>getColumnOriginalValue("userId"));
		pagamentoImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		pagamentoImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		pagamentoImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		pagamentoImpl.setIdCredito(
			this.<String>getColumnOriginalValue("idCredito"));
		pagamentoImpl.setIdFiscaleCliente(
			this.<String>getColumnOriginalValue("idFiscaleCliente"));
		pagamentoImpl.setDenominazioneCliente(
			this.<String>getColumnOriginalValue("denominazioneCliente"));
		pagamentoImpl.setEmailQuietanza(
			this.<String>getColumnOriginalValue("emailQuietanza"));
		pagamentoImpl.setCausale(
			this.<String>getColumnOriginalValue("causale"));
		pagamentoImpl.setServizioId(
			this.<Long>getColumnOriginalValue("servizioId"));
		pagamentoImpl.setNomeServizio(
			this.<String>getColumnOriginalValue("nomeServizio"));
		pagamentoImpl.setImporto(
			this.<BigDecimal>getColumnOriginalValue("importo"));
		pagamentoImpl.setCommissioni(
			this.<BigDecimal>getColumnOriginalValue("commissioni"));
		pagamentoImpl.setCanale(this.<String>getColumnOriginalValue("canale"));
		pagamentoImpl.setGateway(
			this.<String>getColumnOriginalValue("gateway"));
		pagamentoImpl.setIud(this.<String>getColumnOriginalValue("iud"));
		pagamentoImpl.setIuv(this.<String>getColumnOriginalValue("iuv"));
		pagamentoImpl.setIdSessione(
			this.<String>getColumnOriginalValue("idSessione"));
		pagamentoImpl.setPathAvviso(
			this.<String>getColumnOriginalValue("pathAvviso"));
		pagamentoImpl.setEmailInviata(
			this.<Boolean>getColumnOriginalValue("emailInviata"));
		pagamentoImpl.setStato(this.<String>getColumnOriginalValue("stato"));
		pagamentoImpl.setRichiestaId(
			this.<Long>getColumnOriginalValue("richiestaId"));

		return pagamentoImpl;
	}

	@Override
	public int compareTo(Pagamento pagamento) {
		long primaryKey = pagamento.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof Pagamento)) {
			return false;
		}

		Pagamento pagamento = (Pagamento)object;

		long primaryKey = pagamento.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<Pagamento> toCacheModel() {
		PagamentoCacheModel pagamentoCacheModel = new PagamentoCacheModel();

		pagamentoCacheModel.uuid = getUuid();

		String uuid = pagamentoCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			pagamentoCacheModel.uuid = null;
		}

		pagamentoCacheModel.pagamentoId = getPagamentoId();

		pagamentoCacheModel.groupId = getGroupId();

		pagamentoCacheModel.companyId = getCompanyId();

		pagamentoCacheModel.userId = getUserId();

		pagamentoCacheModel.userName = getUserName();

		String userName = pagamentoCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			pagamentoCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			pagamentoCacheModel.createDate = createDate.getTime();
		}
		else {
			pagamentoCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			pagamentoCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			pagamentoCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		pagamentoCacheModel.idCredito = getIdCredito();

		String idCredito = pagamentoCacheModel.idCredito;

		if ((idCredito != null) && (idCredito.length() == 0)) {
			pagamentoCacheModel.idCredito = null;
		}

		pagamentoCacheModel.idFiscaleCliente = getIdFiscaleCliente();

		String idFiscaleCliente = pagamentoCacheModel.idFiscaleCliente;

		if ((idFiscaleCliente != null) && (idFiscaleCliente.length() == 0)) {
			pagamentoCacheModel.idFiscaleCliente = null;
		}

		pagamentoCacheModel.denominazioneCliente = getDenominazioneCliente();

		String denominazioneCliente = pagamentoCacheModel.denominazioneCliente;

		if ((denominazioneCliente != null) &&
			(denominazioneCliente.length() == 0)) {

			pagamentoCacheModel.denominazioneCliente = null;
		}

		pagamentoCacheModel.emailQuietanza = getEmailQuietanza();

		String emailQuietanza = pagamentoCacheModel.emailQuietanza;

		if ((emailQuietanza != null) && (emailQuietanza.length() == 0)) {
			pagamentoCacheModel.emailQuietanza = null;
		}

		pagamentoCacheModel.causale = getCausale();

		String causale = pagamentoCacheModel.causale;

		if ((causale != null) && (causale.length() == 0)) {
			pagamentoCacheModel.causale = null;
		}

		pagamentoCacheModel.servizioId = getServizioId();

		pagamentoCacheModel.nomeServizio = getNomeServizio();

		String nomeServizio = pagamentoCacheModel.nomeServizio;

		if ((nomeServizio != null) && (nomeServizio.length() == 0)) {
			pagamentoCacheModel.nomeServizio = null;
		}

		pagamentoCacheModel.importo = getImporto();

		pagamentoCacheModel.commissioni = getCommissioni();

		pagamentoCacheModel.canale = getCanale();

		String canale = pagamentoCacheModel.canale;

		if ((canale != null) && (canale.length() == 0)) {
			pagamentoCacheModel.canale = null;
		}

		pagamentoCacheModel.gateway = getGateway();

		String gateway = pagamentoCacheModel.gateway;

		if ((gateway != null) && (gateway.length() == 0)) {
			pagamentoCacheModel.gateway = null;
		}

		pagamentoCacheModel.iud = getIud();

		String iud = pagamentoCacheModel.iud;

		if ((iud != null) && (iud.length() == 0)) {
			pagamentoCacheModel.iud = null;
		}

		pagamentoCacheModel.iuv = getIuv();

		String iuv = pagamentoCacheModel.iuv;

		if ((iuv != null) && (iuv.length() == 0)) {
			pagamentoCacheModel.iuv = null;
		}

		pagamentoCacheModel.idSessione = getIdSessione();

		String idSessione = pagamentoCacheModel.idSessione;

		if ((idSessione != null) && (idSessione.length() == 0)) {
			pagamentoCacheModel.idSessione = null;
		}

		pagamentoCacheModel.pathAvviso = getPathAvviso();

		String pathAvviso = pagamentoCacheModel.pathAvviso;

		if ((pathAvviso != null) && (pathAvviso.length() == 0)) {
			pagamentoCacheModel.pathAvviso = null;
		}

		pagamentoCacheModel.emailInviata = isEmailInviata();

		pagamentoCacheModel.stato = getStato();

		String stato = pagamentoCacheModel.stato;

		if ((stato != null) && (stato.length() == 0)) {
			pagamentoCacheModel.stato = null;
		}

		pagamentoCacheModel.richiestaId = getRichiestaId();

		return pagamentoCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<Pagamento, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<Pagamento, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Pagamento, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((Pagamento)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<Pagamento, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<Pagamento, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<Pagamento, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((Pagamento)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, Pagamento>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private String _uuid;
	private long _pagamentoId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _idCredito;
	private String _idFiscaleCliente;
	private String _denominazioneCliente;
	private String _emailQuietanza;
	private String _causale;
	private long _servizioId;
	private String _nomeServizio;
	private BigDecimal _importo;
	private BigDecimal _commissioni;
	private String _canale;
	private String _gateway;
	private String _iud;
	private String _iuv;
	private String _idSessione;
	private String _pathAvviso;
	private boolean _emailInviata;
	private String _stato;
	private long _richiestaId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<Pagamento, Object> function = _attributeGetterFunctions.get(
			columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((Pagamento)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("pagamentoId", _pagamentoId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("idCredito", _idCredito);
		_columnOriginalValues.put("idFiscaleCliente", _idFiscaleCliente);
		_columnOriginalValues.put(
			"denominazioneCliente", _denominazioneCliente);
		_columnOriginalValues.put("emailQuietanza", _emailQuietanza);
		_columnOriginalValues.put("causale", _causale);
		_columnOriginalValues.put("servizioId", _servizioId);
		_columnOriginalValues.put("nomeServizio", _nomeServizio);
		_columnOriginalValues.put("importo", _importo);
		_columnOriginalValues.put("commissioni", _commissioni);
		_columnOriginalValues.put("canale", _canale);
		_columnOriginalValues.put("gateway", _gateway);
		_columnOriginalValues.put("iud", _iud);
		_columnOriginalValues.put("iuv", _iuv);
		_columnOriginalValues.put("idSessione", _idSessione);
		_columnOriginalValues.put("pathAvviso", _pathAvviso);
		_columnOriginalValues.put("emailInviata", _emailInviata);
		_columnOriginalValues.put("stato", _stato);
		_columnOriginalValues.put("richiestaId", _richiestaId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("pagamentoId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("idCredito", 256L);

		columnBitmasks.put("idFiscaleCliente", 512L);

		columnBitmasks.put("denominazioneCliente", 1024L);

		columnBitmasks.put("emailQuietanza", 2048L);

		columnBitmasks.put("causale", 4096L);

		columnBitmasks.put("servizioId", 8192L);

		columnBitmasks.put("nomeServizio", 16384L);

		columnBitmasks.put("importo", 32768L);

		columnBitmasks.put("commissioni", 65536L);

		columnBitmasks.put("canale", 131072L);

		columnBitmasks.put("gateway", 262144L);

		columnBitmasks.put("iud", 524288L);

		columnBitmasks.put("iuv", 1048576L);

		columnBitmasks.put("idSessione", 2097152L);

		columnBitmasks.put("pathAvviso", 4194304L);

		columnBitmasks.put("emailInviata", 8388608L);

		columnBitmasks.put("stato", 16777216L);

		columnBitmasks.put("richiestaId", 33554432L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private Pagamento _escapedModel;

}