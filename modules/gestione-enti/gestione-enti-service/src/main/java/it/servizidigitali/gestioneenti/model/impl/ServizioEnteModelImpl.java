/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.servizidigitali.gestioneenti.model.impl;

import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import it.servizidigitali.gestioneenti.model.ServizioEnte;
import it.servizidigitali.gestioneenti.model.ServizioEnteModel;
import it.servizidigitali.gestioneenti.service.persistence.ServizioEntePK;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the ServizioEnte service. Represents a row in the &quot;servizio_ente&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>ServizioEnteModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ServizioEnteImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see ServizioEnteImpl
 * @generated
 */
public class ServizioEnteModelImpl
	extends BaseModelImpl<ServizioEnte> implements ServizioEnteModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a servizio ente model instance should use the <code>ServizioEnte</code> interface instead.
	 */
	public static final String TABLE_NAME = "servizio_ente";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"servizioId", Types.BIGINT},
		{"organizationId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"userId", Types.BIGINT},
		{"userName", Types.VARCHAR}, {"createDate", Types.TIMESTAMP},
		{"modifiedDate", Types.TIMESTAMP}, {"privateLayoutId", Types.BIGINT},
		{"publicLayoutId", Types.BIGINT}, {"uriEsterna", Types.VARCHAR},
		{"catalogoServizioArticleId", Types.BIGINT},
		{"subOrganizationId", Types.BIGINT}, {"autenticazione", Types.BOOLEAN},
		{"livelloAutenticazione", Types.INTEGER},
		{"dataInizioAttivazione", Types.TIMESTAMP},
		{"dataFineAttivazione", Types.TIMESTAMP}, {"cittadino", Types.BOOLEAN},
		{"azienda", Types.BOOLEAN}, {"delega", Types.BOOLEAN},
		{"chatbot", Types.BOOLEAN}, {"prenotabile", Types.BOOLEAN},
		{"privacyDelega", Types.BOOLEAN}, {"allegatoDelega", Types.BOOLEAN},
		{"timbroCertificato", Types.BOOLEAN}, {"iseeInps", Types.BOOLEAN},
		{"attivo", Types.BOOLEAN}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("servizioId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("organizationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("privateLayoutId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("publicLayoutId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("uriEsterna", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("catalogoServizioArticleId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("subOrganizationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("autenticazione", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("livelloAutenticazione", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("dataInizioAttivazione", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dataFineAttivazione", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("cittadino", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("azienda", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("delega", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("chatbot", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("prenotabile", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("privacyDelega", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("allegatoDelega", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("timbroCertificato", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("iseeInps", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("attivo", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE =
		"create table servizio_ente (uuid_ VARCHAR(75) null,servizioId LONG not null,organizationId LONG not null,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,privateLayoutId LONG,publicLayoutId LONG,uriEsterna VARCHAR(75) null,catalogoServizioArticleId LONG,subOrganizationId LONG,autenticazione BOOLEAN,livelloAutenticazione INTEGER,dataInizioAttivazione DATE null,dataFineAttivazione DATE null,cittadino BOOLEAN,azienda BOOLEAN,delega BOOLEAN,chatbot BOOLEAN,prenotabile BOOLEAN,privacyDelega BOOLEAN,allegatoDelega BOOLEAN,timbroCertificato BOOLEAN,iseeInps BOOLEAN,attivo BOOLEAN,primary key (servizioId, organizationId))";

	public static final String TABLE_SQL_DROP = "drop table servizio_ente";

	public static final String ORDER_BY_JPQL =
		" ORDER BY servizioEnte.id.servizioId ASC, servizioEnte.id.organizationId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY servizio_ente.servizioId ASC, servizio_ente.organizationId ASC";

	public static final String DATA_SOURCE = "servizidigitaliDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ORGANIZATIONID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PRIVATELAYOUTID_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PUBLICLAYOUTID_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long SERVIZIOID_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 64L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public ServizioEnteModelImpl() {
	}

	@Override
	public ServizioEntePK getPrimaryKey() {
		return new ServizioEntePK(_servizioId, _organizationId);
	}

	@Override
	public void setPrimaryKey(ServizioEntePK primaryKey) {
		setServizioId(primaryKey.servizioId);
		setOrganizationId(primaryKey.organizationId);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new ServizioEntePK(_servizioId, _organizationId);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((ServizioEntePK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return ServizioEnte.class;
	}

	@Override
	public String getModelClassName() {
		return ServizioEnte.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<ServizioEnte, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<ServizioEnte, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ServizioEnte, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((ServizioEnte)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<ServizioEnte, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<ServizioEnte, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(ServizioEnte)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<ServizioEnte, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<ServizioEnte, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, ServizioEnte>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			ServizioEnte.class.getClassLoader(), ServizioEnte.class,
			ModelWrapper.class);

		try {
			Constructor<ServizioEnte> constructor =
				(Constructor<ServizioEnte>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<ServizioEnte, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<ServizioEnte, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<ServizioEnte, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<ServizioEnte, Object>>();
		Map<String, BiConsumer<ServizioEnte, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<ServizioEnte, ?>>();

		attributeGetterFunctions.put("uuid", ServizioEnte::getUuid);
		attributeSetterBiConsumers.put(
			"uuid", (BiConsumer<ServizioEnte, String>)ServizioEnte::setUuid);
		attributeGetterFunctions.put("servizioId", ServizioEnte::getServizioId);
		attributeSetterBiConsumers.put(
			"servizioId",
			(BiConsumer<ServizioEnte, Long>)ServizioEnte::setServizioId);
		attributeGetterFunctions.put(
			"organizationId", ServizioEnte::getOrganizationId);
		attributeSetterBiConsumers.put(
			"organizationId",
			(BiConsumer<ServizioEnte, Long>)ServizioEnte::setOrganizationId);
		attributeGetterFunctions.put("groupId", ServizioEnte::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<ServizioEnte, Long>)ServizioEnte::setGroupId);
		attributeGetterFunctions.put("companyId", ServizioEnte::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<ServizioEnte, Long>)ServizioEnte::setCompanyId);
		attributeGetterFunctions.put("userId", ServizioEnte::getUserId);
		attributeSetterBiConsumers.put(
			"userId", (BiConsumer<ServizioEnte, Long>)ServizioEnte::setUserId);
		attributeGetterFunctions.put("userName", ServizioEnte::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<ServizioEnte, String>)ServizioEnte::setUserName);
		attributeGetterFunctions.put("createDate", ServizioEnte::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<ServizioEnte, Date>)ServizioEnte::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", ServizioEnte::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<ServizioEnte, Date>)ServizioEnte::setModifiedDate);
		attributeGetterFunctions.put(
			"privateLayoutId", ServizioEnte::getPrivateLayoutId);
		attributeSetterBiConsumers.put(
			"privateLayoutId",
			(BiConsumer<ServizioEnte, Long>)ServizioEnte::setPrivateLayoutId);
		attributeGetterFunctions.put(
			"publicLayoutId", ServizioEnte::getPublicLayoutId);
		attributeSetterBiConsumers.put(
			"publicLayoutId",
			(BiConsumer<ServizioEnte, Long>)ServizioEnte::setPublicLayoutId);
		attributeGetterFunctions.put("uriEsterna", ServizioEnte::getUriEsterna);
		attributeSetterBiConsumers.put(
			"uriEsterna",
			(BiConsumer<ServizioEnte, String>)ServizioEnte::setUriEsterna);
		attributeGetterFunctions.put(
			"catalogoServizioArticleId",
			ServizioEnte::getCatalogoServizioArticleId);
		attributeSetterBiConsumers.put(
			"catalogoServizioArticleId",
			(BiConsumer<ServizioEnte, Long>)
				ServizioEnte::setCatalogoServizioArticleId);
		attributeGetterFunctions.put(
			"subOrganizationId", ServizioEnte::getSubOrganizationId);
		attributeSetterBiConsumers.put(
			"subOrganizationId",
			(BiConsumer<ServizioEnte, Long>)ServizioEnte::setSubOrganizationId);
		attributeGetterFunctions.put(
			"autenticazione", ServizioEnte::getAutenticazione);
		attributeSetterBiConsumers.put(
			"autenticazione",
			(BiConsumer<ServizioEnte, Boolean>)ServizioEnte::setAutenticazione);
		attributeGetterFunctions.put(
			"livelloAutenticazione", ServizioEnte::getLivelloAutenticazione);
		attributeSetterBiConsumers.put(
			"livelloAutenticazione",
			(BiConsumer<ServizioEnte, Integer>)
				ServizioEnte::setLivelloAutenticazione);
		attributeGetterFunctions.put(
			"dataInizioAttivazione", ServizioEnte::getDataInizioAttivazione);
		attributeSetterBiConsumers.put(
			"dataInizioAttivazione",
			(BiConsumer<ServizioEnte, Date>)
				ServizioEnte::setDataInizioAttivazione);
		attributeGetterFunctions.put(
			"dataFineAttivazione", ServizioEnte::getDataFineAttivazione);
		attributeSetterBiConsumers.put(
			"dataFineAttivazione",
			(BiConsumer<ServizioEnte, Date>)
				ServizioEnte::setDataFineAttivazione);
		attributeGetterFunctions.put("cittadino", ServizioEnte::getCittadino);
		attributeSetterBiConsumers.put(
			"cittadino",
			(BiConsumer<ServizioEnte, Boolean>)ServizioEnte::setCittadino);
		attributeGetterFunctions.put("azienda", ServizioEnte::getAzienda);
		attributeSetterBiConsumers.put(
			"azienda",
			(BiConsumer<ServizioEnte, Boolean>)ServizioEnte::setAzienda);
		attributeGetterFunctions.put("delega", ServizioEnte::getDelega);
		attributeSetterBiConsumers.put(
			"delega",
			(BiConsumer<ServizioEnte, Boolean>)ServizioEnte::setDelega);
		attributeGetterFunctions.put("chatbot", ServizioEnte::getChatbot);
		attributeSetterBiConsumers.put(
			"chatbot",
			(BiConsumer<ServizioEnte, Boolean>)ServizioEnte::setChatbot);
		attributeGetterFunctions.put(
			"prenotabile", ServizioEnte::getPrenotabile);
		attributeSetterBiConsumers.put(
			"prenotabile",
			(BiConsumer<ServizioEnte, Boolean>)ServizioEnte::setPrenotabile);
		attributeGetterFunctions.put(
			"privacyDelega", ServizioEnte::getPrivacyDelega);
		attributeSetterBiConsumers.put(
			"privacyDelega",
			(BiConsumer<ServizioEnte, Boolean>)ServizioEnte::setPrivacyDelega);
		attributeGetterFunctions.put(
			"allegatoDelega", ServizioEnte::getAllegatoDelega);
		attributeSetterBiConsumers.put(
			"allegatoDelega",
			(BiConsumer<ServizioEnte, Boolean>)ServizioEnte::setAllegatoDelega);
		attributeGetterFunctions.put(
			"timbroCertificato", ServizioEnte::getTimbroCertificato);
		attributeSetterBiConsumers.put(
			"timbroCertificato",
			(BiConsumer<ServizioEnte, Boolean>)
				ServizioEnte::setTimbroCertificato);
		attributeGetterFunctions.put("iseeInps", ServizioEnte::getIseeInps);
		attributeSetterBiConsumers.put(
			"iseeInps",
			(BiConsumer<ServizioEnte, Boolean>)ServizioEnte::setIseeInps);
		attributeGetterFunctions.put("attivo", ServizioEnte::getAttivo);
		attributeSetterBiConsumers.put(
			"attivo",
			(BiConsumer<ServizioEnte, Boolean>)ServizioEnte::setAttivo);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@Override
	public long getServizioId() {
		return _servizioId;
	}

	@Override
	public void setServizioId(long servizioId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_servizioId = servizioId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalServizioId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("servizioId"));
	}

	@Override
	public long getOrganizationId() {
		return _organizationId;
	}

	@Override
	public void setOrganizationId(long organizationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_organizationId = organizationId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalOrganizationId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("organizationId"));
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getPrivateLayoutId() {
		return _privateLayoutId;
	}

	@Override
	public void setPrivateLayoutId(long privateLayoutId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_privateLayoutId = privateLayoutId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalPrivateLayoutId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("privateLayoutId"));
	}

	@Override
	public long getPublicLayoutId() {
		return _publicLayoutId;
	}

	@Override
	public void setPublicLayoutId(long publicLayoutId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_publicLayoutId = publicLayoutId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalPublicLayoutId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("publicLayoutId"));
	}

	@Override
	public String getUriEsterna() {
		if (_uriEsterna == null) {
			return "";
		}
		else {
			return _uriEsterna;
		}
	}

	@Override
	public void setUriEsterna(String uriEsterna) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uriEsterna = uriEsterna;
	}

	@Override
	public long getCatalogoServizioArticleId() {
		return _catalogoServizioArticleId;
	}

	@Override
	public void setCatalogoServizioArticleId(long catalogoServizioArticleId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_catalogoServizioArticleId = catalogoServizioArticleId;
	}

	@Override
	public long getSubOrganizationId() {
		return _subOrganizationId;
	}

	@Override
	public void setSubOrganizationId(long subOrganizationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_subOrganizationId = subOrganizationId;
	}

	@Override
	public boolean getAutenticazione() {
		return _autenticazione;
	}

	@Override
	public boolean isAutenticazione() {
		return _autenticazione;
	}

	@Override
	public void setAutenticazione(boolean autenticazione) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_autenticazione = autenticazione;
	}

	@Override
	public int getLivelloAutenticazione() {
		return _livelloAutenticazione;
	}

	@Override
	public void setLivelloAutenticazione(int livelloAutenticazione) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_livelloAutenticazione = livelloAutenticazione;
	}

	@Override
	public Date getDataInizioAttivazione() {
		return _dataInizioAttivazione;
	}

	@Override
	public void setDataInizioAttivazione(Date dataInizioAttivazione) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dataInizioAttivazione = dataInizioAttivazione;
	}

	@Override
	public Date getDataFineAttivazione() {
		return _dataFineAttivazione;
	}

	@Override
	public void setDataFineAttivazione(Date dataFineAttivazione) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_dataFineAttivazione = dataFineAttivazione;
	}

	@Override
	public boolean getCittadino() {
		return _cittadino;
	}

	@Override
	public boolean isCittadino() {
		return _cittadino;
	}

	@Override
	public void setCittadino(boolean cittadino) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_cittadino = cittadino;
	}

	@Override
	public boolean getAzienda() {
		return _azienda;
	}

	@Override
	public boolean isAzienda() {
		return _azienda;
	}

	@Override
	public void setAzienda(boolean azienda) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_azienda = azienda;
	}

	@Override
	public boolean getDelega() {
		return _delega;
	}

	@Override
	public boolean isDelega() {
		return _delega;
	}

	@Override
	public void setDelega(boolean delega) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_delega = delega;
	}

	@Override
	public boolean getChatbot() {
		return _chatbot;
	}

	@Override
	public boolean isChatbot() {
		return _chatbot;
	}

	@Override
	public void setChatbot(boolean chatbot) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_chatbot = chatbot;
	}

	@Override
	public boolean getPrenotabile() {
		return _prenotabile;
	}

	@Override
	public boolean isPrenotabile() {
		return _prenotabile;
	}

	@Override
	public void setPrenotabile(boolean prenotabile) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_prenotabile = prenotabile;
	}

	@Override
	public boolean getPrivacyDelega() {
		return _privacyDelega;
	}

	@Override
	public boolean isPrivacyDelega() {
		return _privacyDelega;
	}

	@Override
	public void setPrivacyDelega(boolean privacyDelega) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_privacyDelega = privacyDelega;
	}

	@Override
	public boolean getAllegatoDelega() {
		return _allegatoDelega;
	}

	@Override
	public boolean isAllegatoDelega() {
		return _allegatoDelega;
	}

	@Override
	public void setAllegatoDelega(boolean allegatoDelega) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_allegatoDelega = allegatoDelega;
	}

	@Override
	public boolean getTimbroCertificato() {
		return _timbroCertificato;
	}

	@Override
	public boolean isTimbroCertificato() {
		return _timbroCertificato;
	}

	@Override
	public void setTimbroCertificato(boolean timbroCertificato) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_timbroCertificato = timbroCertificato;
	}

	@Override
	public boolean getIseeInps() {
		return _iseeInps;
	}

	@Override
	public boolean isIseeInps() {
		return _iseeInps;
	}

	@Override
	public void setIseeInps(boolean iseeInps) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_iseeInps = iseeInps;
	}

	@Override
	public boolean getAttivo() {
		return _attivo;
	}

	@Override
	public boolean isAttivo() {
		return _attivo;
	}

	@Override
	public void setAttivo(boolean attivo) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_attivo = attivo;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(ServizioEnte.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ServizioEnte toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, ServizioEnte>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ServizioEnteImpl servizioEnteImpl = new ServizioEnteImpl();

		servizioEnteImpl.setUuid(getUuid());
		servizioEnteImpl.setServizioId(getServizioId());
		servizioEnteImpl.setOrganizationId(getOrganizationId());
		servizioEnteImpl.setGroupId(getGroupId());
		servizioEnteImpl.setCompanyId(getCompanyId());
		servizioEnteImpl.setUserId(getUserId());
		servizioEnteImpl.setUserName(getUserName());
		servizioEnteImpl.setCreateDate(getCreateDate());
		servizioEnteImpl.setModifiedDate(getModifiedDate());
		servizioEnteImpl.setPrivateLayoutId(getPrivateLayoutId());
		servizioEnteImpl.setPublicLayoutId(getPublicLayoutId());
		servizioEnteImpl.setUriEsterna(getUriEsterna());
		servizioEnteImpl.setCatalogoServizioArticleId(
			getCatalogoServizioArticleId());
		servizioEnteImpl.setSubOrganizationId(getSubOrganizationId());
		servizioEnteImpl.setAutenticazione(isAutenticazione());
		servizioEnteImpl.setLivelloAutenticazione(getLivelloAutenticazione());
		servizioEnteImpl.setDataInizioAttivazione(getDataInizioAttivazione());
		servizioEnteImpl.setDataFineAttivazione(getDataFineAttivazione());
		servizioEnteImpl.setCittadino(isCittadino());
		servizioEnteImpl.setAzienda(isAzienda());
		servizioEnteImpl.setDelega(isDelega());
		servizioEnteImpl.setChatbot(isChatbot());
		servizioEnteImpl.setPrenotabile(isPrenotabile());
		servizioEnteImpl.setPrivacyDelega(isPrivacyDelega());
		servizioEnteImpl.setAllegatoDelega(isAllegatoDelega());
		servizioEnteImpl.setTimbroCertificato(isTimbroCertificato());
		servizioEnteImpl.setIseeInps(isIseeInps());
		servizioEnteImpl.setAttivo(isAttivo());

		servizioEnteImpl.resetOriginalValues();

		return servizioEnteImpl;
	}

	@Override
	public ServizioEnte cloneWithOriginalValues() {
		ServizioEnteImpl servizioEnteImpl = new ServizioEnteImpl();

		servizioEnteImpl.setUuid(this.<String>getColumnOriginalValue("uuid_"));
		servizioEnteImpl.setServizioId(
			this.<Long>getColumnOriginalValue("servizioId"));
		servizioEnteImpl.setOrganizationId(
			this.<Long>getColumnOriginalValue("organizationId"));
		servizioEnteImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		servizioEnteImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		servizioEnteImpl.setUserId(this.<Long>getColumnOriginalValue("userId"));
		servizioEnteImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		servizioEnteImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		servizioEnteImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		servizioEnteImpl.setPrivateLayoutId(
			this.<Long>getColumnOriginalValue("privateLayoutId"));
		servizioEnteImpl.setPublicLayoutId(
			this.<Long>getColumnOriginalValue("publicLayoutId"));
		servizioEnteImpl.setUriEsterna(
			this.<String>getColumnOriginalValue("uriEsterna"));
		servizioEnteImpl.setCatalogoServizioArticleId(
			this.<Long>getColumnOriginalValue("catalogoServizioArticleId"));
		servizioEnteImpl.setSubOrganizationId(
			this.<Long>getColumnOriginalValue("subOrganizationId"));
		servizioEnteImpl.setAutenticazione(
			this.<Boolean>getColumnOriginalValue("autenticazione"));
		servizioEnteImpl.setLivelloAutenticazione(
			this.<Integer>getColumnOriginalValue("livelloAutenticazione"));
		servizioEnteImpl.setDataInizioAttivazione(
			this.<Date>getColumnOriginalValue("dataInizioAttivazione"));
		servizioEnteImpl.setDataFineAttivazione(
			this.<Date>getColumnOriginalValue("dataFineAttivazione"));
		servizioEnteImpl.setCittadino(
			this.<Boolean>getColumnOriginalValue("cittadino"));
		servizioEnteImpl.setAzienda(
			this.<Boolean>getColumnOriginalValue("azienda"));
		servizioEnteImpl.setDelega(
			this.<Boolean>getColumnOriginalValue("delega"));
		servizioEnteImpl.setChatbot(
			this.<Boolean>getColumnOriginalValue("chatbot"));
		servizioEnteImpl.setPrenotabile(
			this.<Boolean>getColumnOriginalValue("prenotabile"));
		servizioEnteImpl.setPrivacyDelega(
			this.<Boolean>getColumnOriginalValue("privacyDelega"));
		servizioEnteImpl.setAllegatoDelega(
			this.<Boolean>getColumnOriginalValue("allegatoDelega"));
		servizioEnteImpl.setTimbroCertificato(
			this.<Boolean>getColumnOriginalValue("timbroCertificato"));
		servizioEnteImpl.setIseeInps(
			this.<Boolean>getColumnOriginalValue("iseeInps"));
		servizioEnteImpl.setAttivo(
			this.<Boolean>getColumnOriginalValue("attivo"));

		return servizioEnteImpl;
	}

	@Override
	public int compareTo(ServizioEnte servizioEnte) {
		ServizioEntePK primaryKey = servizioEnte.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof ServizioEnte)) {
			return false;
		}

		ServizioEnte servizioEnte = (ServizioEnte)object;

		ServizioEntePK primaryKey = servizioEnte.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<ServizioEnte> toCacheModel() {
		ServizioEnteCacheModel servizioEnteCacheModel =
			new ServizioEnteCacheModel();

		servizioEnteCacheModel.servizioEntePK = getPrimaryKey();

		servizioEnteCacheModel.uuid = getUuid();

		String uuid = servizioEnteCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			servizioEnteCacheModel.uuid = null;
		}

		servizioEnteCacheModel.servizioId = getServizioId();

		servizioEnteCacheModel.organizationId = getOrganizationId();

		servizioEnteCacheModel.groupId = getGroupId();

		servizioEnteCacheModel.companyId = getCompanyId();

		servizioEnteCacheModel.userId = getUserId();

		servizioEnteCacheModel.userName = getUserName();

		String userName = servizioEnteCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			servizioEnteCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			servizioEnteCacheModel.createDate = createDate.getTime();
		}
		else {
			servizioEnteCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			servizioEnteCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			servizioEnteCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		servizioEnteCacheModel.privateLayoutId = getPrivateLayoutId();

		servizioEnteCacheModel.publicLayoutId = getPublicLayoutId();

		servizioEnteCacheModel.uriEsterna = getUriEsterna();

		String uriEsterna = servizioEnteCacheModel.uriEsterna;

		if ((uriEsterna != null) && (uriEsterna.length() == 0)) {
			servizioEnteCacheModel.uriEsterna = null;
		}

		servizioEnteCacheModel.catalogoServizioArticleId =
			getCatalogoServizioArticleId();

		servizioEnteCacheModel.subOrganizationId = getSubOrganizationId();

		servizioEnteCacheModel.autenticazione = isAutenticazione();

		servizioEnteCacheModel.livelloAutenticazione =
			getLivelloAutenticazione();

		Date dataInizioAttivazione = getDataInizioAttivazione();

		if (dataInizioAttivazione != null) {
			servizioEnteCacheModel.dataInizioAttivazione =
				dataInizioAttivazione.getTime();
		}
		else {
			servizioEnteCacheModel.dataInizioAttivazione = Long.MIN_VALUE;
		}

		Date dataFineAttivazione = getDataFineAttivazione();

		if (dataFineAttivazione != null) {
			servizioEnteCacheModel.dataFineAttivazione =
				dataFineAttivazione.getTime();
		}
		else {
			servizioEnteCacheModel.dataFineAttivazione = Long.MIN_VALUE;
		}

		servizioEnteCacheModel.cittadino = isCittadino();

		servizioEnteCacheModel.azienda = isAzienda();

		servizioEnteCacheModel.delega = isDelega();

		servizioEnteCacheModel.chatbot = isChatbot();

		servizioEnteCacheModel.prenotabile = isPrenotabile();

		servizioEnteCacheModel.privacyDelega = isPrivacyDelega();

		servizioEnteCacheModel.allegatoDelega = isAllegatoDelega();

		servizioEnteCacheModel.timbroCertificato = isTimbroCertificato();

		servizioEnteCacheModel.iseeInps = isIseeInps();

		servizioEnteCacheModel.attivo = isAttivo();

		return servizioEnteCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<ServizioEnte, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<ServizioEnte, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ServizioEnte, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply((ServizioEnte)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<ServizioEnte, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<ServizioEnte, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<ServizioEnte, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((ServizioEnte)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, ServizioEnte>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private String _uuid;
	private long _servizioId;
	private long _organizationId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _privateLayoutId;
	private long _publicLayoutId;
	private String _uriEsterna;
	private long _catalogoServizioArticleId;
	private long _subOrganizationId;
	private boolean _autenticazione;
	private int _livelloAutenticazione;
	private Date _dataInizioAttivazione;
	private Date _dataFineAttivazione;
	private boolean _cittadino;
	private boolean _azienda;
	private boolean _delega;
	private boolean _chatbot;
	private boolean _prenotabile;
	private boolean _privacyDelega;
	private boolean _allegatoDelega;
	private boolean _timbroCertificato;
	private boolean _iseeInps;
	private boolean _attivo;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<ServizioEnte, Object> function = _attributeGetterFunctions.get(
			columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((ServizioEnte)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("servizioId", _servizioId);
		_columnOriginalValues.put("organizationId", _organizationId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("privateLayoutId", _privateLayoutId);
		_columnOriginalValues.put("publicLayoutId", _publicLayoutId);
		_columnOriginalValues.put("uriEsterna", _uriEsterna);
		_columnOriginalValues.put(
			"catalogoServizioArticleId", _catalogoServizioArticleId);
		_columnOriginalValues.put("subOrganizationId", _subOrganizationId);
		_columnOriginalValues.put("autenticazione", _autenticazione);
		_columnOriginalValues.put(
			"livelloAutenticazione", _livelloAutenticazione);
		_columnOriginalValues.put(
			"dataInizioAttivazione", _dataInizioAttivazione);
		_columnOriginalValues.put("dataFineAttivazione", _dataFineAttivazione);
		_columnOriginalValues.put("cittadino", _cittadino);
		_columnOriginalValues.put("azienda", _azienda);
		_columnOriginalValues.put("delega", _delega);
		_columnOriginalValues.put("chatbot", _chatbot);
		_columnOriginalValues.put("prenotabile", _prenotabile);
		_columnOriginalValues.put("privacyDelega", _privacyDelega);
		_columnOriginalValues.put("allegatoDelega", _allegatoDelega);
		_columnOriginalValues.put("timbroCertificato", _timbroCertificato);
		_columnOriginalValues.put("iseeInps", _iseeInps);
		_columnOriginalValues.put("attivo", _attivo);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("servizioId", 2L);

		columnBitmasks.put("organizationId", 4L);

		columnBitmasks.put("groupId", 8L);

		columnBitmasks.put("companyId", 16L);

		columnBitmasks.put("userId", 32L);

		columnBitmasks.put("userName", 64L);

		columnBitmasks.put("createDate", 128L);

		columnBitmasks.put("modifiedDate", 256L);

		columnBitmasks.put("privateLayoutId", 512L);

		columnBitmasks.put("publicLayoutId", 1024L);

		columnBitmasks.put("uriEsterna", 2048L);

		columnBitmasks.put("catalogoServizioArticleId", 4096L);

		columnBitmasks.put("subOrganizationId", 8192L);

		columnBitmasks.put("autenticazione", 16384L);

		columnBitmasks.put("livelloAutenticazione", 32768L);

		columnBitmasks.put("dataInizioAttivazione", 65536L);

		columnBitmasks.put("dataFineAttivazione", 131072L);

		columnBitmasks.put("cittadino", 262144L);

		columnBitmasks.put("azienda", 524288L);

		columnBitmasks.put("delega", 1048576L);

		columnBitmasks.put("chatbot", 2097152L);

		columnBitmasks.put("prenotabile", 4194304L);

		columnBitmasks.put("privacyDelega", 8388608L);

		columnBitmasks.put("allegatoDelega", 16777216L);

		columnBitmasks.put("timbroCertificato", 33554432L);

		columnBitmasks.put("iseeInps", 67108864L);

		columnBitmasks.put("attivo", 134217728L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private ServizioEnte _escapedModel;

}