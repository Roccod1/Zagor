/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package it.servizidigitali.scrivaniaoperatore.model.impl;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringUtil;

import it.servizidigitali.scrivaniaoperatore.model.AllegatoRichiesta;
import it.servizidigitali.scrivaniaoperatore.model.AllegatoRichiestaModel;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Blob;
import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the AllegatoRichiesta service. Represents a row in the &quot;allegato_richiesta&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>AllegatoRichiestaModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AllegatoRichiestaImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see AllegatoRichiestaImpl
 * @generated
 */
public class AllegatoRichiestaModelImpl
	extends BaseModelImpl<AllegatoRichiesta> implements AllegatoRichiestaModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a allegato richiesta model instance should use the <code>AllegatoRichiesta</code> interface instead.
	 */
	public static final String TABLE_NAME = "allegato_richiesta";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"allegatoRichiestaId", Types.BIGINT},
		{"groupId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"idDocumentale", Types.VARCHAR}, {"nome", Types.VARCHAR},
		{"url", Types.VARCHAR}, {"principale", Types.BOOLEAN},
		{"interno", Types.BOOLEAN}, {"visibile", Types.BOOLEAN},
		{"definizioneAllegatoId", Types.BIGINT}, {"richiestaId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("allegatoRichiestaId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("idDocumentale", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("nome", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("url", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("principale", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("interno", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("visibile", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("definizioneAllegatoId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("richiestaId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table allegato_richiesta (uuid_ VARCHAR(75) null,allegatoRichiestaId LONG not null primary key,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,idDocumentale VARCHAR(75) null,nome VARCHAR(75) null,url VARCHAR(75) null,principale BOOLEAN,interno BOOLEAN,visibile BOOLEAN,definizioneAllegatoId LONG,richiestaId LONG)";

	public static final String TABLE_SQL_DROP = "drop table allegato_richiesta";

	public static final String ORDER_BY_JPQL =
		" ORDER BY allegatoRichiesta.allegatoRichiestaId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY allegato_richiesta.allegatoRichiestaId ASC";

	public static final String DATA_SOURCE = "servizidigitaliDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long GROUPID_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long IDDOCUMENTALE_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long INTERNO_COLUMN_BITMASK = 8L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long PRINCIPALE_COLUMN_BITMASK = 16L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long RICHIESTAID_COLUMN_BITMASK = 32L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long URL_COLUMN_BITMASK = 64L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long UUID_COLUMN_BITMASK = 128L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long VISIBILE_COLUMN_BITMASK = 256L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long ALLEGATORICHIESTAID_COLUMN_BITMASK = 512L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public AllegatoRichiestaModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _allegatoRichiestaId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setAllegatoRichiestaId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _allegatoRichiestaId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AllegatoRichiesta.class;
	}

	@Override
	public String getModelClassName() {
		return AllegatoRichiesta.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<AllegatoRichiesta, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<AllegatoRichiesta, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AllegatoRichiesta, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((AllegatoRichiesta)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<AllegatoRichiesta, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<AllegatoRichiesta, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(AllegatoRichiesta)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<AllegatoRichiesta, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<AllegatoRichiesta, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, AllegatoRichiesta>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			AllegatoRichiesta.class.getClassLoader(), AllegatoRichiesta.class,
			ModelWrapper.class);

		try {
			Constructor<AllegatoRichiesta> constructor =
				(Constructor<AllegatoRichiesta>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<AllegatoRichiesta, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<AllegatoRichiesta, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<AllegatoRichiesta, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<AllegatoRichiesta, Object>>();
		Map<String, BiConsumer<AllegatoRichiesta, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<AllegatoRichiesta, ?>>();

		attributeGetterFunctions.put("uuid", AllegatoRichiesta::getUuid);
		attributeSetterBiConsumers.put(
			"uuid",
			(BiConsumer<AllegatoRichiesta, String>)AllegatoRichiesta::setUuid);
		attributeGetterFunctions.put(
			"allegatoRichiestaId", AllegatoRichiesta::getAllegatoRichiestaId);
		attributeSetterBiConsumers.put(
			"allegatoRichiestaId",
			(BiConsumer<AllegatoRichiesta, Long>)
				AllegatoRichiesta::setAllegatoRichiestaId);
		attributeGetterFunctions.put("groupId", AllegatoRichiesta::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<AllegatoRichiesta, Long>)AllegatoRichiesta::setGroupId);
		attributeGetterFunctions.put(
			"companyId", AllegatoRichiesta::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<AllegatoRichiesta, Long>)
				AllegatoRichiesta::setCompanyId);
		attributeGetterFunctions.put("userId", AllegatoRichiesta::getUserId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<AllegatoRichiesta, Long>)AllegatoRichiesta::setUserId);
		attributeGetterFunctions.put(
			"userName", AllegatoRichiesta::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<AllegatoRichiesta, String>)
				AllegatoRichiesta::setUserName);
		attributeGetterFunctions.put(
			"createDate", AllegatoRichiesta::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<AllegatoRichiesta, Date>)
				AllegatoRichiesta::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", AllegatoRichiesta::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<AllegatoRichiesta, Date>)
				AllegatoRichiesta::setModifiedDate);
		attributeGetterFunctions.put(
			"idDocumentale", AllegatoRichiesta::getIdDocumentale);
		attributeSetterBiConsumers.put(
			"idDocumentale",
			(BiConsumer<AllegatoRichiesta, String>)
				AllegatoRichiesta::setIdDocumentale);
		attributeGetterFunctions.put("nome", AllegatoRichiesta::getNome);
		attributeSetterBiConsumers.put(
			"nome",
			(BiConsumer<AllegatoRichiesta, String>)AllegatoRichiesta::setNome);
		attributeGetterFunctions.put("url", AllegatoRichiesta::getUrl);
		attributeSetterBiConsumers.put(
			"url",
			(BiConsumer<AllegatoRichiesta, String>)AllegatoRichiesta::setUrl);
		attributeGetterFunctions.put(
			"principale", AllegatoRichiesta::getPrincipale);
		attributeSetterBiConsumers.put(
			"principale",
			(BiConsumer<AllegatoRichiesta, Boolean>)
				AllegatoRichiesta::setPrincipale);
		attributeGetterFunctions.put("interno", AllegatoRichiesta::getInterno);
		attributeSetterBiConsumers.put(
			"interno",
			(BiConsumer<AllegatoRichiesta, Boolean>)
				AllegatoRichiesta::setInterno);
		attributeGetterFunctions.put(
			"visibile", AllegatoRichiesta::getVisibile);
		attributeSetterBiConsumers.put(
			"visibile",
			(BiConsumer<AllegatoRichiesta, Boolean>)
				AllegatoRichiesta::setVisibile);
		attributeGetterFunctions.put(
			"definizioneAllegatoId",
			AllegatoRichiesta::getDefinizioneAllegatoId);
		attributeSetterBiConsumers.put(
			"definizioneAllegatoId",
			(BiConsumer<AllegatoRichiesta, Long>)
				AllegatoRichiesta::setDefinizioneAllegatoId);
		attributeGetterFunctions.put(
			"richiestaId", AllegatoRichiesta::getRichiestaId);
		attributeSetterBiConsumers.put(
			"richiestaId",
			(BiConsumer<AllegatoRichiesta, Long>)
				AllegatoRichiesta::setRichiestaId);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_uuid = uuid;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUuid() {
		return getColumnOriginalValue("uuid_");
	}

	@Override
	public long getAllegatoRichiestaId() {
		return _allegatoRichiestaId;
	}

	@Override
	public void setAllegatoRichiestaId(long allegatoRichiestaId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_allegatoRichiestaId = allegatoRichiestaId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_groupId = groupId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalGroupId() {
		return GetterUtil.getLong(this.<Long>getColumnOriginalValue("groupId"));
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@Override
	public String getIdDocumentale() {
		if (_idDocumentale == null) {
			return "";
		}
		else {
			return _idDocumentale;
		}
	}

	@Override
	public void setIdDocumentale(String idDocumentale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_idDocumentale = idDocumentale;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalIdDocumentale() {
		return getColumnOriginalValue("idDocumentale");
	}

	@Override
	public String getNome() {
		if (_nome == null) {
			return "";
		}
		else {
			return _nome;
		}
	}

	@Override
	public void setNome(String nome) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_nome = nome;
	}

	@Override
	public String getUrl() {
		if (_url == null) {
			return "";
		}
		else {
			return _url;
		}
	}

	@Override
	public void setUrl(String url) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_url = url;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public String getOriginalUrl() {
		return getColumnOriginalValue("url");
	}

	@Override
	public boolean getPrincipale() {
		return _principale;
	}

	@Override
	public boolean isPrincipale() {
		return _principale;
	}

	@Override
	public void setPrincipale(boolean principale) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_principale = principale;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public boolean getOriginalPrincipale() {
		return GetterUtil.getBoolean(
			this.<Boolean>getColumnOriginalValue("principale"));
	}

	@Override
	public boolean getInterno() {
		return _interno;
	}

	@Override
	public boolean isInterno() {
		return _interno;
	}

	@Override
	public void setInterno(boolean interno) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_interno = interno;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public boolean getOriginalInterno() {
		return GetterUtil.getBoolean(
			this.<Boolean>getColumnOriginalValue("interno"));
	}

	@Override
	public boolean getVisibile() {
		return _visibile;
	}

	@Override
	public boolean isVisibile() {
		return _visibile;
	}

	@Override
	public void setVisibile(boolean visibile) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_visibile = visibile;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public boolean getOriginalVisibile() {
		return GetterUtil.getBoolean(
			this.<Boolean>getColumnOriginalValue("visibile"));
	}

	@Override
	public Long getDefinizioneAllegatoId() {
		return _definizioneAllegatoId;
	}

	@Override
	public void setDefinizioneAllegatoId(Long definizioneAllegatoId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_definizioneAllegatoId = definizioneAllegatoId;
	}

	@Override
	public long getRichiestaId() {
		return _richiestaId;
	}

	@Override
	public void setRichiestaId(long richiestaId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_richiestaId = richiestaId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalRichiestaId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("richiestaId"));
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(AllegatoRichiesta.class.getName()));
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), AllegatoRichiesta.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public AllegatoRichiesta toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, AllegatoRichiesta>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AllegatoRichiestaImpl allegatoRichiestaImpl =
			new AllegatoRichiestaImpl();

		allegatoRichiestaImpl.setUuid(getUuid());
		allegatoRichiestaImpl.setAllegatoRichiestaId(getAllegatoRichiestaId());
		allegatoRichiestaImpl.setGroupId(getGroupId());
		allegatoRichiestaImpl.setCompanyId(getCompanyId());
		allegatoRichiestaImpl.setUserId(getUserId());
		allegatoRichiestaImpl.setUserName(getUserName());
		allegatoRichiestaImpl.setCreateDate(getCreateDate());
		allegatoRichiestaImpl.setModifiedDate(getModifiedDate());
		allegatoRichiestaImpl.setIdDocumentale(getIdDocumentale());
		allegatoRichiestaImpl.setNome(getNome());
		allegatoRichiestaImpl.setUrl(getUrl());
		allegatoRichiestaImpl.setPrincipale(isPrincipale());
		allegatoRichiestaImpl.setInterno(isInterno());
		allegatoRichiestaImpl.setVisibile(isVisibile());
		allegatoRichiestaImpl.setDefinizioneAllegatoId(
			getDefinizioneAllegatoId());
		allegatoRichiestaImpl.setRichiestaId(getRichiestaId());

		allegatoRichiestaImpl.resetOriginalValues();

		return allegatoRichiestaImpl;
	}

	@Override
	public AllegatoRichiesta cloneWithOriginalValues() {
		AllegatoRichiestaImpl allegatoRichiestaImpl =
			new AllegatoRichiestaImpl();

		allegatoRichiestaImpl.setUuid(
			this.<String>getColumnOriginalValue("uuid_"));
		allegatoRichiestaImpl.setAllegatoRichiestaId(
			this.<Long>getColumnOriginalValue("allegatoRichiestaId"));
		allegatoRichiestaImpl.setGroupId(
			this.<Long>getColumnOriginalValue("groupId"));
		allegatoRichiestaImpl.setCompanyId(
			this.<Long>getColumnOriginalValue("companyId"));
		allegatoRichiestaImpl.setUserId(
			this.<Long>getColumnOriginalValue("userId"));
		allegatoRichiestaImpl.setUserName(
			this.<String>getColumnOriginalValue("userName"));
		allegatoRichiestaImpl.setCreateDate(
			this.<Date>getColumnOriginalValue("createDate"));
		allegatoRichiestaImpl.setModifiedDate(
			this.<Date>getColumnOriginalValue("modifiedDate"));
		allegatoRichiestaImpl.setIdDocumentale(
			this.<String>getColumnOriginalValue("idDocumentale"));
		allegatoRichiestaImpl.setNome(
			this.<String>getColumnOriginalValue("nome"));
		allegatoRichiestaImpl.setUrl(
			this.<String>getColumnOriginalValue("url"));
		allegatoRichiestaImpl.setPrincipale(
			this.<Boolean>getColumnOriginalValue("principale"));
		allegatoRichiestaImpl.setInterno(
			this.<Boolean>getColumnOriginalValue("interno"));
		allegatoRichiestaImpl.setVisibile(
			this.<Boolean>getColumnOriginalValue("visibile"));
		allegatoRichiestaImpl.setDefinizioneAllegatoId(
			this.<Long>getColumnOriginalValue("definizioneAllegatoId"));
		allegatoRichiestaImpl.setRichiestaId(
			this.<Long>getColumnOriginalValue("richiestaId"));

		return allegatoRichiestaImpl;
	}

	@Override
	public int compareTo(AllegatoRichiesta allegatoRichiesta) {
		long primaryKey = allegatoRichiesta.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof AllegatoRichiesta)) {
			return false;
		}

		AllegatoRichiesta allegatoRichiesta = (AllegatoRichiesta)object;

		long primaryKey = allegatoRichiesta.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<AllegatoRichiesta> toCacheModel() {
		AllegatoRichiestaCacheModel allegatoRichiestaCacheModel =
			new AllegatoRichiestaCacheModel();

		allegatoRichiestaCacheModel.uuid = getUuid();

		String uuid = allegatoRichiestaCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			allegatoRichiestaCacheModel.uuid = null;
		}

		allegatoRichiestaCacheModel.allegatoRichiestaId =
			getAllegatoRichiestaId();

		allegatoRichiestaCacheModel.groupId = getGroupId();

		allegatoRichiestaCacheModel.companyId = getCompanyId();

		allegatoRichiestaCacheModel.userId = getUserId();

		allegatoRichiestaCacheModel.userName = getUserName();

		String userName = allegatoRichiestaCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			allegatoRichiestaCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			allegatoRichiestaCacheModel.createDate = createDate.getTime();
		}
		else {
			allegatoRichiestaCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			allegatoRichiestaCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			allegatoRichiestaCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		allegatoRichiestaCacheModel.idDocumentale = getIdDocumentale();

		String idDocumentale = allegatoRichiestaCacheModel.idDocumentale;

		if ((idDocumentale != null) && (idDocumentale.length() == 0)) {
			allegatoRichiestaCacheModel.idDocumentale = null;
		}

		allegatoRichiestaCacheModel.nome = getNome();

		String nome = allegatoRichiestaCacheModel.nome;

		if ((nome != null) && (nome.length() == 0)) {
			allegatoRichiestaCacheModel.nome = null;
		}

		allegatoRichiestaCacheModel.url = getUrl();

		String url = allegatoRichiestaCacheModel.url;

		if ((url != null) && (url.length() == 0)) {
			allegatoRichiestaCacheModel.url = null;
		}

		allegatoRichiestaCacheModel.principale = isPrincipale();

		allegatoRichiestaCacheModel.interno = isInterno();

		allegatoRichiestaCacheModel.visibile = isVisibile();

		Long definizioneAllegatoId = getDefinizioneAllegatoId();

		if (definizioneAllegatoId != null) {
			allegatoRichiestaCacheModel.definizioneAllegatoId =
				definizioneAllegatoId;
		}

		allegatoRichiestaCacheModel.richiestaId = getRichiestaId();

		return allegatoRichiestaCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<AllegatoRichiesta, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<AllegatoRichiesta, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AllegatoRichiesta, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("\"");
			sb.append(attributeName);
			sb.append("\": ");

			Object value = attributeGetterFunction.apply(
				(AllegatoRichiesta)this);

			if (value == null) {
				sb.append("null");
			}
			else if (value instanceof Blob || value instanceof Date ||
					 value instanceof Map || value instanceof String) {

				sb.append(
					"\"" + StringUtil.replace(value.toString(), "\"", "'") +
						"\"");
			}
			else {
				sb.append(value);
			}

			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<AllegatoRichiesta, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<AllegatoRichiesta, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<AllegatoRichiesta, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((AllegatoRichiesta)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, AllegatoRichiesta>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private String _uuid;
	private long _allegatoRichiestaId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _idDocumentale;
	private String _nome;
	private String _url;
	private boolean _principale;
	private boolean _interno;
	private boolean _visibile;
	private Long _definizioneAllegatoId;
	private long _richiestaId;

	public <T> T getColumnValue(String columnName) {
		columnName = _attributeNames.getOrDefault(columnName, columnName);

		Function<AllegatoRichiesta, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((AllegatoRichiesta)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("uuid_", _uuid);
		_columnOriginalValues.put("allegatoRichiestaId", _allegatoRichiestaId);
		_columnOriginalValues.put("groupId", _groupId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put("idDocumentale", _idDocumentale);
		_columnOriginalValues.put("nome", _nome);
		_columnOriginalValues.put("url", _url);
		_columnOriginalValues.put("principale", _principale);
		_columnOriginalValues.put("interno", _interno);
		_columnOriginalValues.put("visibile", _visibile);
		_columnOriginalValues.put(
			"definizioneAllegatoId", _definizioneAllegatoId);
		_columnOriginalValues.put("richiestaId", _richiestaId);
	}

	private static final Map<String, String> _attributeNames;

	static {
		Map<String, String> attributeNames = new HashMap<>();

		attributeNames.put("uuid_", "uuid");

		_attributeNames = Collections.unmodifiableMap(attributeNames);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("uuid_", 1L);

		columnBitmasks.put("allegatoRichiestaId", 2L);

		columnBitmasks.put("groupId", 4L);

		columnBitmasks.put("companyId", 8L);

		columnBitmasks.put("userId", 16L);

		columnBitmasks.put("userName", 32L);

		columnBitmasks.put("createDate", 64L);

		columnBitmasks.put("modifiedDate", 128L);

		columnBitmasks.put("idDocumentale", 256L);

		columnBitmasks.put("nome", 512L);

		columnBitmasks.put("url", 1024L);

		columnBitmasks.put("principale", 2048L);

		columnBitmasks.put("interno", 4096L);

		columnBitmasks.put("visibile", 8192L);

		columnBitmasks.put("definizioneAllegatoId", 16384L);

		columnBitmasks.put("richiestaId", 32768L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private AllegatoRichiesta _escapedModel;

}